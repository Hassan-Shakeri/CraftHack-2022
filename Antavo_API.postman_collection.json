{
  "_": {
    "postman_id": "efffd420-a8de-4599-b39d-dd947eabff7f"
  },
  "item": [
    {
      "id": "5861d520-b409-4b9d-9371-55d2540e5692",
      "name": "Activities",
      "description": {
        "content": "This endpoint collects and aggregates all activities, provided by all modules",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c76eb2c2-e9f2-4c28-9960-5c1c49806232",
          "name": "List of all Activities",
          "request": {
            "name": "List of all Activities",
            "description": {
              "content": "Aggregates earn and spend activities provided by all modules including:\n\n* [Rewards](https://docs.antavo.com/user-manual/rewards/)\n* [Challenges](https://docs.antavo.com/user-manual/challenges/)\n* [Social follow](https://docs.antavo.com/user-manual/social-follow/)\n* [Social share](https://docs.antavo.com/user-manual/social-share/) ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Enter one or more activity types separated by commas for filtering.",
                    "type": "text/plain"
                  },
                  "key": "activity_types",
                  "value": "aliquip in adipisicin"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0838a8da-263f-48a4-9b8d-277262fa1c63",
              "name": "List of all activities",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "activity_types",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"activity_type\": \"challenge\",\n      \"title\": \"Generic activity\",\n      \"description\": \"A longer description on regarding the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 700,\n      \"message\": \"elit ipsum do labore ea\"\n    },\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"activity_type\": \"challenge\",\n      \"title\": \"Generic activity\",\n      \"description\": \"A longer description on regarding the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 700,\n      \"message\": \"dolore pariatur deserunt sunt\"\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c9dfbf9-fe9f-4a1f-ac9e-a2390a4bd13f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"ListofallActivitiesResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"activity_type\",\"title\",\"description\",\"status\",\"image\",\"points\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique activity ID\",\"example\":\"5c17c37f71f86e7f798b4576\"},\"title\":{\"type\":\"string\",\"example\":\"Generic activity\"},\"description\":{\"type\":\"string\",\"example\":\"A longer description on regarding the activity\"},\"status\":{\"type\":\"string\",\"example\":\"active\",\"enum\":[\"active\",\"scheduled\",\"expired\",\"restricted\"]},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"example\":700},\"activity_type\":{\"type\":\"string\",\"example\":\"challenge\"},\"message\":{\"type\":\"string\",\"description\":\"Custom message for when activity is restricted\"}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "a193658f-7b24-4ce2-930d-bf90d110cb6d",
          "name": "Earn Activities",
          "request": {
            "name": "Earn Activities",
            "description": {
              "content": " Aggregates all earn activities. Current modules:\n* [Rewards](https://docs.antavo.com/user-manual/rewards/)\n* [Challenges](https://docs.antavo.com/user-manual/challenges/)\n* [Social follow](https://docs.antavo.com/user-manual/social-follow/)\n* [Social share](https://docs.antavo.com/user-manual/social-share/) ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "earn"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "37cbe59b-3361-458a-80f1-f2b22cb1390e",
              "name": "List of earn activities",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "earn"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"activity_type\": \"challenge\",\n      \"title\": \"Generic activity\",\n      \"description\": \"A longer description on regarding the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 700,\n      \"message\": \"amet sint\"\n    },\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"activity_type\": \"challenge\",\n      \"title\": \"Generic activity\",\n      \"description\": \"A longer description on regarding the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 700,\n      \"message\": \"eiusmod cupidatat sit ut\"\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "38b35d6d-8617-4751-a1d6-fd8727c28be4",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/earn - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/earn - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/earn - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"activity_type\",\"title\",\"description\",\"status\",\"image\",\"points\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique activity ID\",\"example\":\"5c17c37f71f86e7f798b4576\"},\"title\":{\"type\":\"string\",\"example\":\"Generic activity\"},\"description\":{\"type\":\"string\",\"example\":\"A longer description on regarding the activity\"},\"status\":{\"type\":\"string\",\"example\":\"active\",\"enum\":[\"active\",\"scheduled\",\"expired\",\"restricted\"]},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"example\":700},\"activity_type\":{\"type\":\"string\",\"example\":\"challenge\"},\"message\":{\"type\":\"string\",\"description\":\"Custom message for when activity is restricted\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/earn - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "b52de125-13e5-4cde-9dc4-d52dfe2799b3",
          "name": "Spend Activities",
          "request": {
            "name": "Spend Activities",
            "description": {
              "content": "Aggregates all spend activities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "spend"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ded4dda2-8eac-4552-b827-c464a4b7e70a",
              "name": "List of spend activities",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "spend"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"activity_type\": \"challenge\",\n      \"title\": \"Generic activity\",\n      \"description\": \"A longer description on regarding the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 700,\n      \"message\": \"amet sint\"\n    },\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"activity_type\": \"challenge\",\n      \"title\": \"Generic activity\",\n      \"description\": \"A longer description on regarding the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 700,\n      \"message\": \"eiusmod cupidatat sit ut\"\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "184e5e12-f3db-4962-bd12-5bd11ad31be5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/spend - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/spend - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/spend - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"activity_type\",\"title\",\"description\",\"status\",\"image\",\"points\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique activity ID\",\"example\":\"5c17c37f71f86e7f798b4576\"},\"title\":{\"type\":\"string\",\"example\":\"Generic activity\"},\"description\":{\"type\":\"string\",\"example\":\"A longer description on regarding the activity\"},\"status\":{\"type\":\"string\",\"example\":\"active\",\"enum\":[\"active\",\"scheduled\",\"expired\",\"restricted\"]},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"example\":700},\"activity_type\":{\"type\":\"string\",\"example\":\"challenge\"},\"message\":{\"type\":\"string\",\"description\":\"Custom message for when activity is restricted\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/spend - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "4cabd0a6-9be2-408b-8c9e-fd9277f75da1",
      "name": "Challenges",
      "description": {
        "content": "Endpoints provided by the _Challenges_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "272e345b-be74-48a8-895b-6cafb036d5b7",
          "name": "Challenge Activities",
          "request": {
            "name": "Challenge Activities",
            "description": {
              "content": "Returns all active challenges available for the customer",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "challenges"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ec954379-48b4-40f1-9f60-bcb447bf6ba1",
              "name": "List of challenges",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "challenges"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"title\": \"Test challenge\",\n      \"description\": \"This is the long description of the challenge\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 120,\n      \"completions\": 3,\n      \"message\": \"anim dolor\",\n      \"cta_label\": \"dolore nostrud quis eu\",\n      \"url\": \"https://example.com/challenge\",\n      \"ends_at\": \"1990-01-03T06:25:00.937Z\",\n      \"progress\": {\n        \"overall\": 67,\n        \"criteria\": [\n          {\n            \"action\": \"checkout\",\n            \"current\": 2,\n            \"threshold\": 3,\n            \"message\": \"Make at least 5 purchases\",\n            \"is_completed\": false\n          },\n          {\n            \"action\": \"checkout\",\n            \"current\": 2,\n            \"threshold\": 3,\n            \"message\": \"Make at least 5 purchases\",\n            \"is_completed\": false\n          }\n        ]\n      },\n      \"tags\": [\n        \"featured\",\n        \"new\"\n      ]\n    },\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"title\": \"Test challenge\",\n      \"description\": \"This is the long description of the challenge\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 120,\n      \"completions\": 3,\n      \"message\": \"Lorem labore\",\n      \"cta_label\": \"minim aliquip esse sint in\",\n      \"url\": \"https://example.com/challenge\",\n      \"ends_at\": \"2003-09-24T00:24:57.846Z\",\n      \"progress\": {\n        \"overall\": 67,\n        \"criteria\": [\n          {\n            \"action\": \"checkout\",\n            \"current\": 2,\n            \"threshold\": 3,\n            \"message\": \"Make at least 5 purchases\",\n            \"is_completed\": false\n          },\n          {\n            \"action\": \"checkout\",\n            \"current\": 2,\n            \"threshold\": 3,\n            \"message\": \"Make at least 5 purchases\",\n            \"is_completed\": false\n          }\n        ]\n      },\n      \"tags\": [\n        \"featured\",\n        \"new\"\n      ]\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c7514f3-9bf0-412b-a572-d811ad3befae",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/challenges - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/challenges - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/challenges - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"title\",\"description\",\"status\",\"image\",\"points\",\"completions\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique activity ID\",\"example\":\"5c17c37f71f86e7f798b4576\"},\"title\":{\"type\":\"string\",\"example\":\"Test challenge\"},\"description\":{\"type\":\"string\",\"example\":\"This is the long description of the challenge\"},\"status\":{\"type\":\"string\",\"enum\":[\"active\",\"restricted\"],\"example\":\"active\"},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"example\":120},\"message\":{\"type\":\"string\",\"description\":\"Custom message for when activity is restricted\"},\"cta_label\":{\"type\":\"string\",\"description\":\"Call-to-action button label\"},\"url\":{\"type\":\"string\",\"format\":\"uri\",\"description\":\"Website URL to go in order to participate in or complete the challenge\",\"example\":\"https://example.com/challenge\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"End date of the challenge, if defined\"},\"completions\":{\"type\":\"integer\",\"description\":\"Number of times the customer completed the challenge\",\"example\":3},\"progress\":{\"type\":\"object\",\"description\":\"Progress information on *Challenge Criteria*, returned for active challenges only\",\"required\":[\"overall\",\"criteria\"],\"properties\":{\"overall\":{\"type\":\"integer\",\"minimum\":0,\"maximum\":100,\"description\":\"Calculated overall progress as percentage (sum of capped `current` values per sum of `threshold` values)\",\"example\":67},\"criteria\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"description\":\"Represents the completion state of a *Challenge Criterium* for given customer\",\"required\":[\"action\",\"current\",\"threshold\",\"message\",\"is_completed\"],\"properties\":{\"action\":{\"type\":\"string\",\"description\":\"Action type to be taken to complete the criterium\",\"example\":\"checkout\"},\"message\":{\"type\":\"string\",\"description\":\"Call to action text\",\"example\":\"Make at least 5 purchases\"},\"threshold\":{\"type\":\"integer\",\"description\":\"Minimum number of actions of given type that is required to complete the criterium\",\"example\":3},\"current\":{\"type\":\"integer\",\"description\":\"Number of actions of given type taken by the customer\",\"example\":2},\"is_completed\":{\"type\":\"boolean\",\"example\":false}}}}}},\"tags\":{\"type\":\"array\",\"example\":[\"featured\",\"new\"],\"items\":{\"type\":\"string\"}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/challenges - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ce93e35d-5715-419e-bcc3-e400b8c2887e",
          "name": "Completed Challenges",
          "request": {
            "name": "Completed Challenges",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "challenges"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique Customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a01afef8-e936-4a9b-bece-a11bd49184cb",
              "name": "List of Challenge completions for Customer",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "challenges"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique Customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"59412866d2edb9d3128b4651\",\n      \"title\": \"Test challenge\",\n      \"created_at\": \"2019-12-10T18:28:49.000Z\",\n      \"last_completed_at\": \"2020-01-08T09:13:32.000Z\",\n      \"completions\": 2\n    },\n    {\n      \"id\": \"59412866d2edb9d3128b4651\",\n      \"title\": \"Test challenge\",\n      \"created_at\": \"2019-12-10T18:28:49.000Z\",\n      \"last_completed_at\": \"2020-01-08T09:13:32.000Z\",\n      \"completions\": 2\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d1cbdfbd-cd27-4eeb-94bf-9cdb10d826c8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/challenges - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/challenges - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/challenges - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Lists challenge completions\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"title\",\"created_at\",\"last_completed_at\",\"completions\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique Challenge ID\",\"example\":\"59412866d2edb9d3128b4651\"},\"title\":{\"type\":\"string\",\"description\":\"Title of the challenge\",\"example\":\"Test challenge\"},\"created_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp of first evaluation of the challenge\",\"example\":\"2019-12-10T18:28:49.000Z\"},\"last_completed_at\":{\"type\":\"string\",\"description\":\"Timestamp of last challenge completion\",\"example\":\"2020-01-08T09:13:32.000Z\"},\"completions\":{\"type\":\"integer\",\"description\":\"Number of times the customer completed the challenge\",\"example\":2}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/challenges - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "1fc420d6-343c-437f-b61a-851edb62da6c",
      "name": "Content Consumption",
      "description": {
        "content": "Endpoints provided by the _Content Consumption_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "65112d23-c22b-4b86-b989-66e70af53377",
          "name": "Content Consumption Activities",
          "request": {
            "name": "Content Consumption Activities",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "content-consumption"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "56e330f8-63b1-420b-9b2a-d5b1cd9f04a2",
              "name": "available content consumptions cards",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "content-consumption"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"ex non\",\n      \"title\": \"Watch this video!\",\n      \"description\": \"minim ut aute laborum\",\n      \"status\": \"active\",\n      \"points\": 100,\n      \"type\": \"video\",\n      \"url\": \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n    },\n    {\n      \"id\": \"ut in ex elit\",\n      \"title\": \"Watch this video!\",\n      \"description\": \"ad cupidatat\",\n      \"status\": \"active\",\n      \"points\": 100,\n      \"type\": \"video\",\n      \"url\": \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f379fd3b-6bcc-43d8-9d31-bfc180c505e4",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/content-consumption - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/content-consumption - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/content-consumption - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"title\",\"description\",\"status\",\"points\",\"type\",\"url\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"This field is present only for compatibility reasons, for now its value is always null\",\"example\":null},\"title\":{\"type\":\"string\",\"example\":\"Watch this video!\"},\"description\":{\"type\":\"string\",\"description\":\"This field is present only for compatibility reasons, for now its value is always null\",\"example\":null},\"status\":{\"type\":\"string\",\"enum\":[\"active\"],\"description\":\"For now this activity always appears as active\",\"example\":\"active\"},\"points\":{\"type\":\"integer\",\"example\":100},\"type\":{\"type\":\"string\",\"enum\":[\"visit\",\"video\"],\"example\":\"video\"},\"url\":{\"type\":\"string\",\"description\":\"Content URL to visit or watch\",\"example\":\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/content-consumption - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "4f1db1c5-ca25-45b8-84a6-0ff4a671db20",
      "name": "Contests",
      "description": {
        "content": "Endpoints provided by the _Contests Lite_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "66388e9a-64a3-42e3-b7f1-24ab8b5adbf8",
          "name": "Contest Activities",
          "request": {
            "name": "Contest Activities",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "contests"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Comma separated list of non-standard fields",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "aliquip in adipisicin"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique Customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5e1ac244-b1e9-4f95-9e84-db5403f13b64",
              "name": "List of available Contests",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "contests"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "fields",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique Customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5ea6b6bc127abc45008b456f\",\n      \"title\": \"Activity Example\",\n      \"description\": \"Example activity description\",\n      \"status\": \"active\",\n      \"points\": 500,\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"progress\": {\n        \"max\": 3,\n        \"current\": 2,\n        \"is_completed\": false\n      },\n      \"terms\": \"pariatur ut sit exerci\",\n      \"_action\": {\n        \"complete\": {\n          \"method\": \"POST\",\n          \"answer\": \"http://ODOXESSOAUDhQcJFuoWHdarbbhAAuB.mcpthoILq\"\n        }\n      }\n    },\n    {\n      \"id\": \"5ea6b6bc127abc45008b456f\",\n      \"title\": \"Activity Example\",\n      \"description\": \"Example activity description\",\n      \"status\": \"active\",\n      \"points\": 500,\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"progress\": {\n        \"max\": 3,\n        \"current\": 2,\n        \"is_completed\": false\n      },\n      \"terms\": \"cillum aute\",\n      \"_action\": {\n        \"complete\": {\n          \"method\": \"POST\",\n          \"answer\": \"http://NkTtbcBsbo.jhqwgCjcEWd8s\"\n        }\n      }\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "12ff4bac-01c6-4d1d-9578-e554c14951ad",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/contests - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/contests - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/contests - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"title\",\"description\",\"status\",\"points\",\"image\",\"progress\",\"_actions\"],\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ea6b6bc127abc45008b456f\"},\"title\":{\"type\":\"string\",\"example\":\"Activity Example\"},\"description\":{\"type\":\"string\",\"example\":\"Example activity description\"},\"status\":{\"type\":\"string\",\"enum\":[\"active\",\"scheduled\",\"expired\",\"completed\",\"restricted\"],\"example\":\"active\"},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"example\":500},\"terms\":{\"type\":\"string\",\"description\":\"Terms & Conditions. This field is returned only when explicitly requested via the 'fields' query parameter\"},\"progress\":{\"type\":\"object\",\"properties\":{\"max\":{\"type\":\"integer\",\"description\":\"Maximum number of entries a customer can make for given contest\",\"example\":3},\"current\":{\"type\":\"integer\",\"description\":\"Number of entries made by the customer on given contest\",\"example\":2},\"is_completed\":{\"type\":\"boolean\",\"description\":\"Denotes if the activity is completed\",\"example\":false}}},\"_action\":{\"type\":\"object\",\"properties\":{\"complete\":{\"type\":\"object\",\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"POST\"},\"answer\":{\"type\":\"string\",\"format\":\"uri\",\"description\":\"Endpoint to enter a contest\",\"example\":\"/customers/c987654/activities/contests/5e847240ce6d0514008b4587/enter\"}}}}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/contests - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "052bde65-aad7-4d94-b99f-1c7a7fb39e98",
          "name": "Enter to a Contest",
          "request": {
            "name": "Enter to a Contest",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "contests",
                ":contest_id",
                "enter"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique contest ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "contest_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cff74ed7-6937-43ae-9c1a-79ac9b35b523",
              "name": "Enter result, including a post-entry message",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "contests",
                    ":contest_id",
                    "enter"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique contest ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "contest_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"You've successfully entered for this promotion!\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7fce4103-0b0d-44c1-ba48-ee716f283fd0",
              "name": "Customer or contest not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "contests",
                    ":contest_id",
                    "enter"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique contest ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "contest_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d871b6e-9614-4d1d-beaf-2a5bf2488f6b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/activities/contests/:contest_id/enter - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/activities/contests/:contest_id/enter - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/activities/contests/:contest_id/enter - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\",\"example\":\"You've successfully entered for this promotion!\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/activities/contests/:contest_id/enter - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "b5917293-8171-46b1-bc14-8a5964e36863",
      "name": "Coupons",
      "description": {
        "content": "Endpoints provided by the _Coupons_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a94b5b59-d70e-4b9f-a6ee-d2d86f1eb935",
          "name": "Customer's associated coupons",
          "request": {
            "name": "Customer's associated coupons",
            "description": {
              "content": "Returns all coupons associated with specified customer",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "coupons"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by the coupon code",
                    "type": "text/plain"
                  },
                  "key": "code",
                  "value": "aliquip in adipisicin"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by the name of the coupon",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "aliquip in adipisicin"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by coupon's status: Accepted values: claimed, expired, partially_redeemed and redeemed",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "claimed"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by  type of coupon. Accepted values: amount,free_shipping,gift_card, percentage",
                    "type": "text/plain"
                  },
                  "key": "type",
                  "value": "amount"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Filter by the value of coupon.",
                    "type": "text/plain"
                  },
                  "key": "value",
                  "value": "2326905"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a100184b-b505-4245-a8cb-9706ad7f6ca1",
              "name": "Coupon list",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "coupons"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "code",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "name",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "status",
                      "value": "claimed"
                    },
                    {
                      "key": "type",
                      "value": "amount"
                    },
                    {
                      "key": "value",
                      "value": "2326905"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"code\": \"ABC123\",\n      \"status\": \"claimed\",\n      \"created_at\": \"1964-04-14T23:31:17.261Z\",\n      \"type\": \"amount\",\n      \"value\": 2.5,\n      \"currency\": \"EUR\",\n      \"claimed_at\": \"1947-06-06T11:48:33.718Z\",\n      \"redeemed_at\": \"2018-11-24T01:20:24.580Z\",\n      \"expires_at\": \"1977-04-13T07:19:48.117Z\",\n      \"name\": \"aliqua Ut\",\n      \"pool\": \"Example coupon pool#2\"\n    },\n    {\n      \"code\": \"ABC123\",\n      \"status\": \"claimed\",\n      \"created_at\": \"1982-01-28T16:15:08.642Z\",\n      \"type\": \"amount\",\n      \"value\": 2.5,\n      \"currency\": \"EUR\",\n      \"claimed_at\": \"2005-04-07T04:48:39.905Z\",\n      \"redeemed_at\": \"1998-01-16T22:14:14.231Z\",\n      \"expires_at\": \"2016-02-08T10:01:31.421Z\",\n      \"name\": \"enim reprehenderit\",\n      \"pool\": \"Example coupon pool#2\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9f8aeecd-79b1-4087-be5d-eb5e1c1dae09",
              "name": "Customer not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "coupons"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "code",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "name",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "status",
                      "value": "claimed"
                    },
                    {
                      "key": "type",
                      "value": "amount"
                    },
                    {
                      "key": "value",
                      "value": "2326905"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d6e1650-dcdc-40bd-bf27-e80c21a25eb3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/coupons - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/coupons - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/coupons - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"code\",\"status\",\"created_at\",\"type\",\"value\"],\"properties\":{\"code\":{\"description\":\"The coupon code\",\"type\":\"string\",\"example\":\"ABC123\"},\"status\":{\"description\":\"The status of the coupon whether it was only claimed by the customer or redeemed (already used)\",\"type\":\"string\",\"enum\":[\"claimed\",\"redeemed\"],\"example\":\"claimed\"},\"type\":{\"description\":\"The coupon type, whether it is a percentage coupon, a monetary coupon, or free shipping\",\"type\":\"string\",\"enum\":[\"percentage\",\"amount\",\"free_shipping\"],\"example\":\"amount\"},\"value\":{\"description\":\"Arbitrary number as coupon value for amount type coupons, or a percentage number (0-100)\",\"type\":\"number\",\"example\":2.5},\"currency\":{\"description\":\"ISO 4217 alphabetic code of the coupon currency, if defined\",\"type\":\"string\",\"example\":\"EUR\"},\"created_at\":{\"description\":\"The date at which the coupon was created\",\"type\":\"string\",\"format\":\"date-time\"},\"claimed_at\":{\"description\":\"The date at which the customer claimed the reward\",\"type\":\"string\",\"format\":\"date-time\"},\"redeemed_at\":{\"description\":\"The date at which the customer used the coupon code\",\"type\":\"string\",\"format\":\"date-time\"},\"expires_at\":{\"description\":\"The date until which the coupon is usable\",\"type\":\"string\",\"format\":\"date-time\"},\"name\":{\"description\":\"Name of the coupon, which is inherited from pool or reward\",\"type\":\"string\",\"example\":null},\"pool\":{\"description\":\"The source coupon pool from which the coupon originated\",\"type\":\"string\",\"example\":\"Example coupon pool#2\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/coupons - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "a9e43c93-96d4-4f45-aca7-a7edda8eecdd",
          "name": "Customer-independent coupon querying Endpoint",
          "request": {
            "name": "Customer-independent coupon querying Endpoint",
            "description": {
              "content": "A Customer-independent querying of coupons within Antavo It is possible to search for coupons based upon Coupon code and Status. Pagination is also available via limits and offset.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "coupons"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Search for a coupon using the Antavo coupon code",
                    "type": "text/plain"
                  },
                  "key": "code",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Search for coupons based upon their status",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "claimed"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Limits the number of coupons to be returned in one response. Other values are accessible by pagination made accessible via the offset.         Default value : 100",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "2326905"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Offsets the starting number of coupons to return. This is used in pagination in conjunction with the limit query. \nDefault value : 0",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "2326905"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ee67462f-62f7-4ba1-a101-a7a689b14231",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "coupons"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "code",
                      "value": ""
                    },
                    {
                      "key": "status",
                      "value": "claimed"
                    },
                    {
                      "key": "limit",
                      "value": "2326905"
                    },
                    {
                      "key": "offset",
                      "value": "2326905"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"code\": \"gift510790\",\n      \"name\": \"Gift Card 20 EUR\",\n      \"status\": \"claimed\",\n      \"created_at\": \"2021-11-04T16:26:57.000Z\",\n      \"customer\": {\n        \"id\": \"1\"\n      },\n      \"claimed_at\": \"2021-11-04T16:26:57.000Z\",\n      \"expires_at\": \"2022-01-04T23:59:59.000Z\",\n      \"currency\": \"EUR\",\n      \"type\": \"gift_card\",\n      \"value\": 20,\n      \"balance\": 20,\n      \"pool\": \"60b8bec0ce61d7c91b000014\",\n      \"min_amount\": 1,\n      \"min_redemption_value\": 1,\n      \"purchase_threshold\": 5\n    },\n    {\n      \"code\": \"bearnotbeer4505923024704457530377\",\n      \"name\": \"Free Beer\",\n      \"status\": \"claimed\",\n      \"created_at\": \"2021-10-29T11:15:53.000Z\",\n      \"customer\": {\n        \"id\": \"1\"\n      },\n      \"claimed_at\": \"2021-10-29T11:15:53.000Z\",\n      \"type\": \"free_shipping\"\n    }\n  ],\n  \"next\": \"/coupons?page=2&limit=0\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f8359edd-e031-458e-9740-5e4a58e89ecc",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/coupons - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/coupons - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/coupons - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"Couponlist\",\"required\":[\"data\"],\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"Coupon\",\"required\":[\"code\",\"status\",\"created_at\",\"type\",\"value\",\"currency\",\"claimed_at\",\"redeemed_at\",\"expires_at\",\"name\",\"pool\"],\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\",\"description\":\"The code used in external system to claim the coupon's benift\"},\"name\":{\"type\":\"string\",\"description\":\"The Customer-facing name of the\"},\"status\":{\"type\":\"string\",\"description\":\"The coupon status in Antavo. Options: claimed, redeemed, invalid and expired\"},\"created_at\":{\"type\":\"string\",\"description\":\"Datetime stamp of creation\"},\"customer\":{\"type\":\"array\",\"description\":\"Lists all customers ID who have claimed the coupons\"},\"claimed_at\":{\"type\":\"string\",\"description\":\"Datetime stamp of coupon claim\"},\"expire_at\":{\"type\":\"string\",\"description\":\"Datetime stamp of coupon expiration\"},\"currency\":{\"type\":\"string\",\"description\":\"The base currency of the coupon\"},\"type\":{\"type\":\"string\",\"description\":\"Type of coupon. Options: amount,percent,free_shipping and gift_card\"},\"value\":{\"type\":\"number\",\"description\":\"The value of the coupon.\"},\"balance\":{\"type\":\"number\",\"description\":\"The remaing value of a gift card following a transaction . Only valid for gift cards.\"},\"pool\":{\"type\":\"string\",\"description\":\"The associated coupon pool\"},\"min_amount\":{\"type\":\"number\",\"description\":\"The minimum allowed balance on card. Lower values result in invalid status\"},\"min_redemption_value\":{\"type\":\"number\",\"description\":\"The minimum amount which can be used for a purchase\"},\"purchase_threshold\":{\"type\":\"number\",\"description\":\"The toal purchase value which be exceeded  in order to use the card.\"}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/coupons - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "810456ff-5d45-4f12-928f-a71ba26509b3",
      "name": "Data extensions",
      "description": {
        "content": "Endpoints for probing data extensions",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1b8ac263-e0ae-47a6-b924-bda757c0f4d5",
          "name": "Generic Endpoint for accessing Antavo data extensions",
          "request": {
            "name": "Generic Endpoint for accessing Antavo data extensions",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "data",
                ":data_extension"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique Customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The Antavo data modules",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "profiling",
                  "key": "data_extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6a3a13dd-ea2b-40af-af95-bd58ef722334",
              "name": "Returned Data structure",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "data",
                    ":data_extension"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique Customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "The Antavo data modules",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "profiling",
                      "key": "data_extension"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"questions\": [\n    {\n      \"id\": 55635634562345230000,\n      \"title\": \"This is the question\",\n      \"flow\": {\n        \"id\": \"3624747347367647345623\",\n        \"title\": \"This is the flow\"\n      },\n      \"answers\": [\n        {\n          \"id\": \"134524645634563457634\",\n          \"title\": \"This is the answer\"\n        }\n      ]\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dfb69da2-dfdf-4ece-b70b-0a0409ce51db",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/data/:data_extension - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/data/:data_extension - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/data/:data_extension - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/data/:data_extension - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "9da1d691-01ff-4a4c-b414-b768ec7940df",
      "name": "History",
      "description": {
        "content": "Endpoints providing information regarding the customers interactions with the loyalty platform",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "390f9fcd-42ff-4c4e-b89b-c2bc2946a294",
          "name": "Returns every Antavo event attributed to a specific customer.",
          "request": {
            "name": "Returns every Antavo event attributed to a specific customer.",
            "description": {
              "content": "\nThis endpoint returns a detailed list of events and the corresponding actions which have been recorded with the associated customer_id. This information can be used as a customer activity source and can also be access using /history endpoint\n\nThe event stream /history can be pre-filtered by specific [event actions](/api/events.html#event-actions). \n\nThe list of returned events  can also be subsequently paginated by limiting the number of returned events and subsequently offsetting the returned events.\nThe event look up will return, if set, an event expiration date. \nThis endpoint was historically known as  /customers/{customer_id}/history. This endpoint is still valid and all options listed below are also applicable.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Limits the number of events to be returned in one response. Other values are accessible by pagination made accessible via the offset.\nDefault value : 100",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "2326905"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Offsets the starting number of events to return. This is used in pagination in conjunction with the limit query. \nDefault value : 0",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "2326905"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A legacy endpoint consisting of comma separated list of actions to filters the type of returned [Antavo events](/api/events.html#event-actions). The action query provides a greater performance and options for filtering",
                    "type": "text/plain"
                  },
                  "key": "actions",
                  "value": "aliquip in adipisicin"
                },
                {
                  "description": {
                    "content": "The Events history can be filtered by submitted event actions. Built-in actions are listed here [here](/api/events.html#event-actions).\n\nThis filter query can be used in conjunction with the operators listed [here](/api/filter.html#query-generation) and the filter should be submitted as qu in the following format\n\n<code> field.operator(optional)=value</code>\n\nFiltering of events containing a TranasactionID id is also possible. This requires the action query to contain all related events and for an additional query using <code>properties.transaction_id</code>. \n\n<code> action.in=checkout,checkout_accept&properties.transaction_id.in=c078c162-88af-4369-89a4-408958a8cb75 </code>.\n\nThese combined filters can also use filtering [operators](/api/filter.html#query-generation). The transaction_id field in any custom event must be set as filterable. ",
                    "type": "text/plain"
                  },
                  "key": "action",
                  "value": ""
                },
                {
                  "description": {
                    "content": "The Events history can be filtered by a specific date. Specific start and/or end dates can be stated by using multiple [operators](/api/filter.html#query-generation) e.g.\n\n<code>date.gt=2020-01-01&date.lt=2022-02-01</code>\n\nBrand timezone should be considered when sending the request ",
                    "type": "text/plain"
                  },
                  "key": "date",
                  "value": ""
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "bd3f861e-9218-4cf2-8925-08bb462a2d91",
              "name": "Customer event history data",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "2326905"
                    },
                    {
                      "key": "offset",
                      "value": "2326905"
                    },
                    {
                      "key": "actions",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "action",
                      "value": ""
                    },
                    {
                      "key": "date",
                      "value": ""
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "61fbfe4c-37fa-4f86-9d6c-2530d0ffe77e",
              "name": "Customer not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "2326905"
                    },
                    {
                      "key": "offset",
                      "value": "2326905"
                    },
                    {
                      "key": "actions",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "action",
                      "value": ""
                    },
                    {
                      "key": "date",
                      "value": ""
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a7c56ce7-61e4-4f93-a26b-b99e799e79d0",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/events - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/events - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"action\",\"label\",\"points\",\"timestamp\",\"properties\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Event reference ID\",\"example\":\"5defe3e1e710bd9b018b45c7\"},\"action\":{\"type\":\"string\",\"description\":\"Describes the properties and behavior when processing an event\",\"example\":\"opt_in\"},\"label\":{\"type\":\"string\",\"description\":\"Event action display name\",\"example\":\"Opt-in\"},\"points\":{\"type\":\"integer\",\"description\":\"Number of points earned (positive) or spent (negative) with the event\",\"example\":10},\"timestamp\":{\"type\":\"string\",\"format\":\"date-time\"},\"properties\":{\"type\":\"array\",\"description\":\"The actual list of properties is defined by the action\",\"items\":{\"type\":\"object\",\"required\":[\"name\",\"value\",\"label\"],\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Property name used internally\",\"example\":\"email\"},\"label\":{\"type\":\"string\",\"description\":\"Display name\",\"example\":\"Email address\"},\"value\":{\"type\":\"string\",\"description\":\"Value type depends on the property\",\"example\":\"john.smith@example.com\"}}}},\"expdate\":{\"type\":\"string\",\"pattern\":\"/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/\",\"description\":\"The point expiry date stored as a YYYY-MM-DD string\",\"example\":\"2022-12-25\"},\"account\":{\"type\":\"object\",\"description\":\"The specific account which the event's points are associated. Only available with multiaccount module\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The account id\",\"example\":\"doc1\"},\"name\":{\"type\":\"string\",\"description\":\"The account label\",\"example\":\"Account 1\"}}}}}},\"prev\":{\"type\":\"string\",\"format\":\"uri\",\"description\":\"Links to the previous page of the event feed; present only when `limit` is set\",\"example\":\"/customers/c987654/events?limit=100&offset=200\"},\"next\":{\"type\":\"string\",\"format\":\"uri\",\"description\":\"Links to the next page of the event feed; present only when `limit` is set\",\"example\":\"/customers/c987654/events?limit=100&offset=400\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/events - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "24bc5974-c5ec-4aea-b0cf-0b107457eaf8",
      "name": "Membership SDK",
      "description": {
        "content": "Core features related to using the Antavo Membership SDK",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5c4cbc78-a4a8-48c4-8e6c-6b6fd6aebbe6",
          "name": "Creates a new customer with log-in credentials",
          "request": {
            "name": "Creates a new customer with log-in credentials",
            "description": {
              "content": "This endpoint creates customer within Antavo according to the specified opt-in parameters stated in the body. \nThis interface is primarily used as a customer-driven registration process which also generates login credentials, enabling the new customer to log into Antavo systems. This endpoint is primarily used with the Antavo membership SDK and complements the [opt-in](/api/events.html#opt-in) event.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "opt-in"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"velit non\",\n  \"confirm_password\": \"mollit nulla deserunt\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@test.com\",\n  \"birth_date\": \"1970-01-01\",\n  \"gender\": \"male\",\n  \"language\": \"en\",\n  \"phone\": \"cupidatat minim proident in\",\n  \"mobile_phone\": \"proident velit ut commodo\",\n  \"handler\": \"john.doe\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2f6550f1-60bb-4c76-a2fc-dc8576411156",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "opt-in"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": \"velit non\",\n  \"confirm_password\": \"mollit nulla deserunt\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@test.com\",\n  \"birth_date\": \"1970-01-01\",\n  \"gender\": \"male\",\n  \"language\": \"en\",\n  \"phone\": \"cupidatat minim proident in\",\n  \"mobile_phone\": \"proident velit ut commodo\",\n  \"handler\": \"john.doe\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"enim\",\n  \"optin_at\": 1612859639,\n  \"last_login_at\": 1612859639,\n  \"updated_at\": 1612859639,\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@test.com\",\n  \"birth_date\": \"1970-01-01\",\n  \"gender\": \"other\",\n  \"language\": \"en\",\n  \"nickname\": \"john.doe\",\n  \"status\": \"active\",\n  \"score\": 100,\n  \"spent\": 10,\n  \"reserved\": 20,\n  \"spendable\": 30,\n  \"pending\": 20,\n  \"properties\": {},\n  \"purchase_total\": 20,\n  \"purchase_count\": 10,\n  \"purchase_last_date\": \"2020-01-01\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8cf89403-3414-49f4-aaa3-3045d13eb481",
              "name": "Bad request",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "opt-in"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": \"velit non\",\n  \"confirm_password\": \"mollit nulla deserunt\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@test.com\",\n  \"birth_date\": \"1970-01-01\",\n  \"gender\": \"male\",\n  \"language\": \"en\",\n  \"phone\": \"cupidatat minim proident in\",\n  \"mobile_phone\": \"proident velit ut commodo\",\n  \"handler\": \"john.doe\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"BadRequestException\",\n  \"code\": 0,\n  \"message\": \"Customer already exists\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "60c2d914-f067-4af7-b99f-d0915de0160d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/opt-in - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/opt-in - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/opt-in - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"Customer\",\"required\":[\"id\",\"optin_at\",\"last_login_at\",\"updated_at\",\"first_name\",\"last_name\",\"email\",\"birth_date\",\"gender\",\"language\",\"nickname\",\"status\",\"score\",\"spent\",\"reserved\",\"spendable\",\"pending\",\"properties\",\"purchase_total\",\"purchase_count\",\"purchase_last_date\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique ID of the customer\",\"example\":5349},\"optin_at\":{\"type\":\"number\",\"description\":\"Timestamp of customer optin\",\"example\":1612859639},\"last_login_at\":{\"type\":\"number\",\"description\":\"Timestamp of customer last login\",\"example\":1612859639},\"updated_at\":{\"type\":\"number\",\"description\":\"Timestamp of customer last updated date\",\"example\":1612859639},\"first_name\":{\"type\":\"string\",\"description\":\"First name of the customer\",\"example\":\"John\"},\"last_name\":{\"type\":\"string\",\"description\":\"Last name of the customer\",\"example\":\"Doe\"},\"email\":{\"type\":\"string\",\"description\":\"E-mail address of the customer\",\"example\":\"john.doe@test.com\"},\"birth_date\":{\"type\":\"string\",\"description\":\"Birth date of the customer\",\"format\":\"date\",\"example\":\"1970-01-01\"},\"gender\":{\"title\":\"Gender\",\"enum\":[\"female\",\"male\",\"other\"],\"type\":\"string\",\"description\":\"Gender of the customer\"},\"language\":{\"type\":\"string\",\"description\":\"Language of the customer\",\"example\":\"en\"},\"nickname\":{\"type\":\"string\",\"description\":\"Nickname of the customer\",\"example\":\"john.doe\"},\"status\":{\"title\":\"Status9\",\"enum\":[\"active\",\"inactive\",\"opted_out\",\"banned\"],\"type\":\"string\",\"description\":\"Status of the customer\"},\"score\":{\"type\":\"number\",\"description\":\"Current score of the customer\",\"example\":100},\"spent\":{\"type\":\"number\",\"description\":\"Number of spent points of the customer\",\"example\":10},\"reserved\":{\"type\":\"number\",\"description\":\"Number of reserver points of the customer\",\"example\":20},\"spendable\":{\"type\":\"number\",\"description\":\"Number of spendable points of the customer\",\"example\":30},\"pending\":{\"type\":\"number\",\"description\":\"Number of pending points of the customer\",\"example\":20},\"properties\":{\"type\":\"object\",\"description\":\"Customer properties\"},\"purchase_total\":{\"type\":\"number\",\"description\":\"Sum of customer's purchase totals\",\"example\":20},\"purchase_count\":{\"type\":\"number\",\"description\":\"Count of customer's purchases\",\"example\":10},\"purchase_last_date\":{\"type\":\"string\",\"description\":\"Customer's last purchase date\",\"format\":\"date\",\"example\":\"2020-01-01\"}},\"description\":\"Customer object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/opt-in - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c2e507ac-c72f-44e7-9511-e0ceee1fffa4",
          "name": "Login a specific customer into Antavo",
          "request": {
            "name": "Login a specific customer into Antavo",
            "description": {
              "content": "This endpoint logs the specified customer into Antavo and a successful login returns the customer object. The username field can be specified in the Antavo Backoffice from any available profile field. The customer unique id can then be accessed and used for subsequent calls using Antavo Display API endpoints.\n\nA successful log-in will also create a ``daily_login`` event for the customer. This event will only be written once to the customer's event stream per calendar day.\n\nThis requires the customer-login module to be enabled.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                "-",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"proident\",\n  \"password\": \"officia nostrud\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6fbf8dff-3c55-4540-91dc-ddc5401e8ca1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "-",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"proident\",\n  \"password\": \"officia nostrud\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"enim\",\n  \"optin_at\": 1612859639,\n  \"last_login_at\": 1612859639,\n  \"updated_at\": 1612859639,\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@test.com\",\n  \"birth_date\": \"1970-01-01\",\n  \"gender\": \"other\",\n  \"language\": \"en\",\n  \"nickname\": \"john.doe\",\n  \"status\": \"active\",\n  \"score\": 100,\n  \"spent\": 10,\n  \"reserved\": 20,\n  \"spendable\": 30,\n  \"pending\": 20,\n  \"properties\": {},\n  \"purchase_total\": 20,\n  \"purchase_count\": 10,\n  \"purchase_last_date\": \"2020-01-01\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "688fff61-6a3f-4235-9bc7-d35c47d9f021",
              "name": "Bad request",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "-",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"proident\",\n  \"password\": \"officia nostrud\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"BadRequestException\",\n  \"code\": 0,\n  \"message\": \"Invalid username or password\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a16dbfb8-ae2f-4404-8549-3a507eedb4b9",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/-/login - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/-/login - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/-/login - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"Customer\",\"required\":[\"id\",\"optin_at\",\"last_login_at\",\"updated_at\",\"first_name\",\"last_name\",\"email\",\"birth_date\",\"gender\",\"language\",\"nickname\",\"status\",\"score\",\"spent\",\"reserved\",\"spendable\",\"pending\",\"properties\",\"purchase_total\",\"purchase_count\",\"purchase_last_date\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique ID of the customer\",\"example\":5349},\"optin_at\":{\"type\":\"number\",\"description\":\"Timestamp of customer optin\",\"example\":1612859639},\"last_login_at\":{\"type\":\"number\",\"description\":\"Timestamp of customer last login\",\"example\":1612859639},\"updated_at\":{\"type\":\"number\",\"description\":\"Timestamp of customer last updated date\",\"example\":1612859639},\"first_name\":{\"type\":\"string\",\"description\":\"First name of the customer\",\"example\":\"John\"},\"last_name\":{\"type\":\"string\",\"description\":\"Last name of the customer\",\"example\":\"Doe\"},\"email\":{\"type\":\"string\",\"description\":\"E-mail address of the customer\",\"example\":\"john.doe@test.com\"},\"birth_date\":{\"type\":\"string\",\"description\":\"Birth date of the customer\",\"format\":\"date\",\"example\":\"1970-01-01\"},\"gender\":{\"title\":\"Gender\",\"enum\":[\"female\",\"male\",\"other\"],\"type\":\"string\",\"description\":\"Gender of the customer\"},\"language\":{\"type\":\"string\",\"description\":\"Language of the customer\",\"example\":\"en\"},\"nickname\":{\"type\":\"string\",\"description\":\"Nickname of the customer\",\"example\":\"john.doe\"},\"status\":{\"title\":\"Status9\",\"enum\":[\"active\",\"inactive\",\"opted_out\",\"banned\"],\"type\":\"string\",\"description\":\"Status of the customer\"},\"score\":{\"type\":\"number\",\"description\":\"Current score of the customer\",\"example\":100},\"spent\":{\"type\":\"number\",\"description\":\"Number of spent points of the customer\",\"example\":10},\"reserved\":{\"type\":\"number\",\"description\":\"Number of reserver points of the customer\",\"example\":20},\"spendable\":{\"type\":\"number\",\"description\":\"Number of spendable points of the customer\",\"example\":30},\"pending\":{\"type\":\"number\",\"description\":\"Number of pending points of the customer\",\"example\":20},\"properties\":{\"type\":\"object\",\"description\":\"Customer properties\"},\"purchase_total\":{\"type\":\"number\",\"description\":\"Sum of customer's purchase totals\",\"example\":20},\"purchase_count\":{\"type\":\"number\",\"description\":\"Count of customer's purchases\",\"example\":10},\"purchase_last_date\":{\"type\":\"string\",\"description\":\"Customer's last purchase date\",\"format\":\"date\",\"example\":\"2020-01-01\"}},\"description\":\"Customer object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/-/login - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c6b3e923-5f62-4086-8712-82d8304b5b89",
          "name": "Request a new password to log into Antavo",
          "request": {
            "name": "Request a new password to log into Antavo",
            "description": {
              "content": "A forgotten password can be reset by submitting this event. The username can be set in the Customer login setting in the Antavo Backoffice and can be any profile field of the customer. The url string is a URL which can be extended with the reset token.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                "-",
                "password",
                "request"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"veniam velit nisi fugiat\",\n  \"url\": \"nostr\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6c5d2d6c-6ccf-4986-b03d-f2a4b92917a8",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "-",
                    "password",
                    "request"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"veniam velit nisi fugiat\",\n  \"url\": \"nostr\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": \"ok\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a4c6ffad-8dbf-4d51-b1be-1c1afd6de443",
              "name": "Bad request",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "-",
                    "password",
                    "request"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"veniam velit nisi fugiat\",\n  \"url\": \"nostr\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"BadRequestException\",\n  \"code\": 0,\n  \"message\": \"Customer not found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d7101005-2ff0-432c-bd92-56f6d4328648",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/-/password/request - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/-/password/request - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/-/password/request - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"PasswordResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"title\":\"Data\",\"enum\":[\"ok\"],\"type\":\"string\",\"description\":\"Success response\"}},\"description\":\"This describes the structure returned if an error occurred\"}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/-/password/request - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7c8fb8da-78b1-4496-b297-1ed220f65009",
          "name": "Reset the password of the current customer",
          "request": {
            "name": "Reset the password of the current customer",
            "description": {
              "content": "This provides a customer-driven interface for changing a password.  The token is captured from the link provided by the password reset email A simple check is provided to ensure that the two passwords match. \nThis requires the customer-login module to be enabled. ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                "-",
                "password",
                "reset"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"amet\",\n  \"password\": \"esse laborum in consequat ex\",\n  \"confirm_password\": \"enim cul\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0e6839b1-ead2-42c5-951b-a43381cfd531",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "-",
                    "password",
                    "reset"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"token\": \"amet\",\n  \"password\": \"esse laborum in consequat ex\",\n  \"confirm_password\": \"enim cul\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": \"ok\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "347d1fb1-298d-4e59-aa36-9a0c76139d86",
              "name": "Bad request",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "-",
                    "password",
                    "reset"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"token\": \"amet\",\n  \"password\": \"esse laborum in consequat ex\",\n  \"confirm_password\": \"enim cul\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"BadRequestException\",\n  \"code\": 0,\n  \"message\": \"This request token is not valid\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2144af74-e7c4-41db-9058-aceb048798d8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/-/password/reset - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/-/password/reset - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/-/password/reset - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"PasswordResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"title\":\"Data\",\"enum\":[\"ok\"],\"type\":\"string\",\"description\":\"Success response\"}},\"description\":\"This describes the structure returned if an error occurred\"}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/-/password/reset - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "18e39fe9-317f-441a-9425-71ebfeeed423",
          "name": "Endpoint used to verify credentials provided during registration",
          "request": {
            "name": "Endpoint used to verify credentials provided during registration",
            "description": {
              "content": "This endpoint is used to activate a customer following the registration process. A successful verification will change the status of the customer to active and enable them to log in and fully access and engage with the Antavo loyalty management platform. Failure will leave the customer in an inactive state.\nThe verification process occurs using a token \nThis endpoint required the customer login module to be enabled with the verification option enabled(disabled by default). ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                "-",
                "verify",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "token",
                  "value": "laborum dolore"
                },
                {
                  "disabled": false,
                  "key": "redirect_url",
                  "value": "ut sint"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9250c0cb-a798-432d-8b8d-8bcff0fc9b87",
              "name": "Successfully confirmed customer",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "-",
                    "verify",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": "laborum dolore"
                    },
                    {
                      "key": "redirect_url",
                      "value": "ut sint"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8ee1fc02-3ed5-4d84-8069-79d95c4fddee",
              "name": "Bad request",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "-",
                    "verify",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": "laborum dolore"
                    },
                    {
                      "key": "redirect_url",
                      "value": "ut sint"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"BadRequestException\",\n  \"code\": 0,\n  \"message\": \"This request token is not valid\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28197890-6981-4041-9145-f8f31762fd03",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/-/verify/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/-/verify/ - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/-/verify/ - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/-/verify/ - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "9120a45b-8bed-409b-857b-f829af4299d3",
      "name": "Offers",
      "description": {
        "content": "Endpoints provided by the _Offers_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "34d87e40-a2d3-4659-a6b1-7c2002a0bdff",
          "name": "List all Offer activities",
          "request": {
            "name": "List all Offer activities",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "offers"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique Customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "54024d31-6abf-4d50-a7c4-cc02e2dae258",
              "name": "List of all available offers",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "offers"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique Customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"title\": \"Generic activity\",\n      \"description\": \"This is the long description of the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 0\n    },\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"title\": \"Generic activity\",\n      \"description\": \"This is the long description of the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 0\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8de18cc6-e9bf-45fb-9254-660fcdc58196",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/offers - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/offers - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/offers - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Lists offer activities\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"description\":\"This entity has the usual activity properties\",\"required\":[\"id\",\"title\",\"description\",\"status\",\"image\",\"points\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique activity ID\",\"example\":\"5c17c37f71f86e7f798b4576\"},\"title\":{\"type\":\"string\",\"description\":\"\",\"example\":\"Generic activity\"},\"description\":{\"type\":\"string\",\"example\":\"This is the long description of the activity\"},\"status\":{\"type\":\"string\",\"enum\":[\"scheduled\",\"active\"],\"description\":\"\",\"example\":\"active\"},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"description\":\"As you cannot earn or spend loyalty points on an offer, this property is always set to zero\",\"example\":0}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/offers - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "5334e7c6-8d91-4962-ba9c-a127485befe6",
          "name": "Returns customer-specific available offers",
          "request": {
            "name": "Returns customer-specific available offers",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "offers",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cart\": {\n    \"total\": 22.22,\n    \"items\": {\n      \"product_id\": \"568433\",\n      \"quantity\": 2,\n      \"price\": 13.6,\n      \"discount\": 2.2,\n      \"subtotal\": 25\n    },\n    \"discount\": 2.22,\n    \"shipping\": 4.44\n  },\n  \"customer\": \"9f3c82d6-288e-4361-aec0-039eb066a334\",\n  \"store\": \"3044\",\n  \"eligible_only\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "631bc152-d491-42f0-9f5e-605f39fdb9b8",
              "name": "Offer data JSON object",
              "originalRequest": {
                "url": {
                  "path": [
                    "offers",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"cart\": {\n    \"total\": 22.22,\n    \"items\": {\n      \"product_id\": \"568433\",\n      \"quantity\": 2,\n      \"price\": 13.6,\n      \"discount\": 2.2,\n      \"subtotal\": 25\n    },\n    \"discount\": 2.22,\n    \"shipping\": 4.44\n  },\n  \"customer\": \"9f3c82d6-288e-4361-aec0-039eb066a334\",\n  \"store\": \"3044\",\n  \"eligible_only\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "21c6991b-a182-479f-848f-2f0055eff299",
              "name": "Missing required parameter - customer",
              "originalRequest": {
                "url": {
                  "path": [
                    "offers",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"cart\": {\n    \"total\": 22.22,\n    \"items\": {\n      \"product_id\": \"568433\",\n      \"quantity\": 2,\n      \"price\": 13.6,\n      \"discount\": 2.2,\n      \"subtotal\": 25\n    },\n    \"discount\": 2.22,\n    \"shipping\": 4.44\n  },\n  \"customer\": \"9f3c82d6-288e-4361-aec0-039eb066a334\",\n  \"store\": \"3044\",\n  \"eligible_only\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "db78254c-2edf-4ab6-81a6-d3a3ef829ddb",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "offers",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"cart\": {\n    \"total\": 22.22,\n    \"items\": {\n      \"product_id\": \"568433\",\n      \"quantity\": 2,\n      \"price\": 13.6,\n      \"discount\": 2.2,\n      \"subtotal\": 25\n    },\n    \"discount\": 2.22,\n    \"shipping\": 4.44\n  },\n  \"customer\": \"9f3c82d6-288e-4361-aec0-039eb066a334\",\n  \"store\": \"3044\",\n  \"eligible_only\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1dfcde6d-7510-474d-9744-908ef8a72fc4",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/offers/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/offers/ - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"oneOf\":[{\"type\":\"array\",\"description\":\"An array of Offer objects\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Only displays name\",\"example\":\"20% off on KID items only\"},\"type\":{\"type\":\"string\",\"enum\":[\"cart\",\"item\",\"combined\"],\"description\":\"Type of offers:\\n * `cart` - Cart discount if  specific cart items are present\\n * `item` - Item discount if present in cart \\n * `combined` - Discount for alternative item if a specified item is in the cart\\n\"},\"weight\":{\"type\":\"number\",\"description\":\"Value from 1-10 with a lower number resulting in higher priority.\",\"example\":3},\"min_total\":{\"type\":\"number\",\"description\":\"Minimum cart total (Cart Offers)\",\"example\":10},\"max_total\":{\"type\":\"number\",\"description\":\"Maximum cart total (Cart Offers)\",\"example\":99.9},\"required_match\":{\"type\":\"string\",\"enum\":[\"any\",\"all\"],\"description\":\"Matching eligible objects (Cart and Combined Offers):\\n  - `any`\\n  - `all` \\n\"},\"required_items\":{\"type\":\"array\",\"description\":\"List of required Items  for eligibility. (Cart and Combined Offers).\\n\",\"required\":[\"type\",\"id\"],\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"product\",\"category\",\"list\"],\"description\":\"Type of item:\\n - `product`\\n - `category`\\n - `list`\\n\"},\"id\":{\"type\":{\"oneOf\":[\"string\",\"array\"]},\"description\":\"Category ID or Product SKU. An array of Product IDs or SKUs can also be returned.\"},\"name\":{\"type\":\"string\",\"description\":\"Category/product name for displaying purposes. Not set for arrays\"},\"min_quantity\":{\"type\":\"number\",\"description\":\"Default value is 1 unless specified\"}}},\"eligible_match\":{\"type\":\"string\",\"enum\":[\"any\",\"all\"],\"description\":\"Matching eligible objects (Cart and Combined Offers):\\n  - `any`\\n  - `all` \\n\"},\"eligible_items\":{\"type\":\"array\",\"description\":\"List of eligible Items (Cart and Combined Offers).\\n\",\"required\":[\"type\",\"id\"],\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"product\",\"category\",\"list\"],\"description\":\"Type of item:\\n - `product`\\n - `category`\\n - `list`\\n\"},\"id\":{\"type\":{\"oneOf\":[\"string\",\"array\"]},\"description\":\"Category ID or Product SKU. An array of Product IDs or SKUs can also be returned.\"},\"name\":{\"type\":\"string\",\"description\":\"Category/product name for displaying purposes. Not set for arrays\"},\"min_quantity\":{\"type\":\"number\",\"description\":\"Default value is 1 unless specified\"}}}}}},{\"type\":\"object\",\"description\":\"occurred\",\"required\":[\"error\"],\"properties\":{\"error\":{\"type\":\"object\",\"required\":[\"type\",\"code\",\"message\"],\"properties\":{\"code\":{\"type\":\"number\",\"description\":\"A 6-digit number to uniquely identify the place the error occurred\",\"example\":404},\"message\":{\"type\":\"string\",\"description\":\"Wrong endpoint is called, possibly a non-existent reward id\"}}}}}]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/offers/ - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a39f8b1f-b1f4-411d-af05-dd062917c7a8",
      "name": "Profiling",
      "description": {
        "content": "Endpoints provided by the _Profiling_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "66dab52b-7316-424d-9dd3-eb48800b4101",
          "name": "Activities (Flows)",
          "request": {
            "name": "Activities (Flows)",
            "description": {
              "content": "Lists all available profiling flows",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "profiling"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2ca43154-4c37-470b-8f39-3d7c5e682e66",
              "name": "List of Profiling Flow activities",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "profiling"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"507f1f77bcf86cd799439011\",\n      \"title\": \"Generic activity\",\n      \"description\": \"This is the long description of the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 120,\n      \"_actions\": {\n        \"next\": {\n          \"method\": \"GET\",\n          \"url\": \"https://AjEPUReeHqIOmdUQCwhE.ykTJtmSwo6JVLlPT\"\n        }\n      }\n    },\n    {\n      \"id\": \"507f1f77bcf86cd799439011\",\n      \"title\": \"Generic activity\",\n      \"description\": \"This is the long description of the activity\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 120,\n      \"_actions\": {\n        \"next\": {\n          \"method\": \"GET\",\n          \"url\": \"https://IaICHPhYHBKZOeGxAnmKD.hifp,LVyA9Ye45GI+ULvw-NRjilkgo0rdEN4UguqWYT2vdhpitMOqiijr1IXl6iHDpuiZnjmw\"\n        }\n      }\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6749f4bf-2108-45ef-a6e2-aa561ada55c8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/profiling - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/profiling - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/profiling - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"required\":[\"data\"],\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"description\":\"A Profiling Flow is a series of questions, which questions should be answered in specific order.\",\"required\":[\"id\",\"title\",\"description\",\"status\",\"image\",\"points\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique flow ID\",\"example\":\"507f1f77bcf86cd799439011\"},\"title\":{\"type\":\"string\",\"example\":\"Generic activity\"},\"description\":{\"type\":\"string\",\"example\":\"This is the long description of the activity\"},\"status\":{\"type\":\"string\",\"enum\":[\"active\",\"scheduled\",\"expired\",\"completed\",\"restricted\"],\"example\":\"active\"},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"example\":120},\"_actions\":{\"type\":\"object\",\"description\":\"Defines actions for the resource\",\"properties\":{\"next\":{\"type\":\"object\",\"description\":\"Endpoint to retrieve next question from\",\"required\":[\"method\",\"url\"],\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"GET\"},\"url\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"/customers/c987654/activities/profiling/507f1f77bcf86cd799439011/next\"}}}}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/profiling - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "d5b942c0-1de7-4bd8-bf3b-7460a82e6a99",
          "name": "Next Flow Question",
          "request": {
            "name": "Next Flow Question",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "profiling",
                ":flow_id",
                "next"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Flow ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "flow_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "812d2d5f-fc82-499c-bd82-aa073e609cc4",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "profiling",
                    ":flow_id",
                    "next"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Flow ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "flow_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"title\": \"Answer to the Ultimate Question of Life, the Universe and Everything\",\n  \"description\": \"Please choose wisely\",\n  \"type\": \"image_options\",\n  \"position\": 46030892,\n  \"answers\": [\n    {\n      \"id\": \"59954ea0d2edb91a2e8b4591\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"text\": \"Fourty-two\",\n      \"color\": \"#5d76cb\"\n    },\n    {\n      \"id\": \"59954ea0d2edb91a2e8b4591\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"text\": \"Fourty-two\",\n      \"color\": \"#5d76cb\"\n    }\n  ],\n  \"min\": 1,\n  \"max\": 100,\n  \"step\": 10,\n  \"image\": {\n    \"small\": \"https://example.com/image0001_small.jpg\",\n    \"medium\": \"https://example.com/image0001_medium.jpg\",\n    \"large\": \"https://example.com/image0001_large.jpg\"\n  },\n  \"_actions\": {\n    \"answer\": {\n      \"method\": \"POST\",\n      \"url\": \"https://nLMLyDWumLuLAQBwYHoHgEl.zvfcFNXkt.LEONMmQUTPxbBCt,j8UJjZ0Q16\"\n    }\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c70df4b-3140-4bf9-ba58-18509d3b5953",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/profiling/:flow_id/next - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/profiling/:flow_id/next - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/profiling/:flow_id/next - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"A Profiling Question\",\"required\":[\"title\",\"description\"],\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"like\",\"text_options\",\"image_options\",\"color_options\",\"text_input\",\"datepicker\",\"numeric_slider\",\"feedback\"],\"description\":\"Defines how to present the question\",\"example\":\"image_options\"},\"title\":{\"type\":\"string\",\"description\":\"The question itself\",\"example\":\"Answer to the Ultimate Question of Life, the Universe and Everything\"},\"description\":{\"type\":\"string\",\"description\":\"Additional information for answering the question\",\"example\":\"Please choose wisely\"},\"position\":{\"type\":\"integer\",\"description\":\"Question's position in the flow\",\"example\":\"2\"},\"answers\":{\"type\":\"array\",\"description\":\"Answers are **not present** for types **numeric-slider**, **text-input**, **date-picker** and **feedback**\",\"items\":{\"type\":\"object\",\"description\":\"Properties are optional, depending on the question type. `image` is present only for *like* and *image_options* types.\",\"required\":[\"id\"],\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"59954ea0d2edb91a2e8b4591\",\"description\":\"Unique Answer ID\"},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"text\":{\"type\":\"string\",\"description\":\"Always present except for **color_options** question type\",\"example\":\"Fourty-two\"},\"color\":{\"type\":\"string\",\"description\":\"RGB color code for answers only in **color_options** question\",\"example\":\"#5d76cb\"}}}},\"min\":{\"type\":\"integer\",\"description\":\"The lowest number the customer can select; for **numeric-slider** only\",\"example\":1},\"max\":{\"type\":\"integer\",\"description\":\"The highest number the customer can select; for **numeric-slider** only\",\"example\":100},\"step\":{\"type\":\"integer\",\"description\":\"Steps for **numeric-slider** only\",\"example\":10},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"_actions\":{\"type\":\"object\",\"description\":\"Defines actions for the resource\",\"properties\":{\"answer\":{\"type\":\"object\",\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"POST\"},\"url\":{\"type\":\"string\",\"format\":\"uri\",\"description\":\"Endpoint to post answer to\",\"example\":\"/customers/c987654/activities/profiling/507f1f77bcf86cd799439011/questions/507c7f79bcf86cd7994f6c0e\"}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/profiling/:flow_id/next - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "bdce05b1-a456-45d3-8e17-06cf6abe3a53",
          "name": "Answering a Question",
          "request": {
            "name": "Answering a Question",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "profiling",
                ":flow_id",
                "questions",
                ":question_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Flow ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "flow_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Question ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "question_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Answer ID where available, or the answer text. For multiple answers an array should be passed. Fore Like questions this should be a boolean value.",
                    "type": "text/plain"
                  },
                  "key": "answer",
                  "value": "ut id et cillum"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2f964d41-3386-4b77-bc0c-7ce4def28cf3",
              "name": "Answer accepted",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "profiling",
                    ":flow_id",
                    "questions",
                    ":question_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Flow ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "flow_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Question ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "question_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Answer ID where available, or the answer text. For multiple answers an array should be passed. Fore Like questions this should be a boolean value.",
                        "type": "text/plain"
                      },
                      "key": "answer",
                      "value": "ut id et cillum"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Congratulations! You just finished our survey.\",\n  \"cta_label\": \"Back to my activities\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "118e9263-32e4-4a2c-9b34-e3ae0aa1ea85",
              "name": "Flow or question not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "profiling",
                    ":flow_id",
                    "questions",
                    ":question_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Flow ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "flow_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Question ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "question_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Answer ID where available, or the answer text. For multiple answers an array should be passed. Fore Like questions this should be a boolean value.",
                        "type": "text/plain"
                      },
                      "key": "answer",
                      "value": "ut id et cillum"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "abbdc6dc-7116-45a9-b1a9-ea598f970cc1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/activities/profiling/:flow_id/questions/:question_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/activities/profiling/:flow_id/questions/:question_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/activities/profiling/:flow_id/questions/:question_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\",\"description\":\"Flow completion message, returned only when the flow is completed\",\"example\":\"Congratulations! You just finished our survey.\"},\"cta_label\":{\"type\":\"string\",\"description\":\"CTA button label to dismiss completion message\",\"example\":\"Back to my activities\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/activities/profiling/:flow_id/questions/:question_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "d6c60fc3-9eb0-4abd-846d-7be38032df12",
      "name": "Prize Wheel",
      "description": {
        "content": "Legacy Endpoints provided by _Prize Wheel_ module - All future implementations should uses [Prize Wheels](#/Prize%20Wheels) module ",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b5cfdabc-2c4a-4847-80db-152f130cc6d4",
          "name": "List all prize wheel slices",
          "request": {
            "name": "List all prize wheel slices",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "prize-wheel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f2a95325-ecb1-4192-89fd-b7f4da52be89",
              "name": "List all prize wheel slices",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "prize-wheel"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5f05b989a44b5e14008b4590\"\n    },\n    {\n      \"id\": \"5f05b989a44b5e14008b4590\"\n    }\n  ],\n  \"total\": 1\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41b45348-098a-4f08-8bb0-f5b9a7a946a1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/prize-wheel - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/prize-wheel - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/prize-wheel - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"required\":[\"data\"],\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44b5e14008b4590\"}}}},\"total\":{\"type\":\"number\",\"example\":1}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/prize-wheel - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "1d09e9db-0cea-4613-9e30-40d798716a95",
          "name": "Enters customer into the prizewheel",
          "request": {
            "name": "Enters customer into the prizewheel",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "prize-wheel"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0d2757fe-1f54-4056-a800-05deb883fa93",
              "name": "Get random slice from all available options",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "prize-wheel"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"5f05b989a44b5e14008b4590\",\n  \"type\": \"empty\",\n  \"label\": \"Try Again\",\n  \"weight\": 0.3\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f76250ca-8e1e-4bb8-89af-921c7f9358ea",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/prize-wheel - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/prize-wheel - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/prize-wheel - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"required\":[\"id\",\"type\",\"label\",\"weight\"],\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44b5e14008b4590\"},\"type\":{\"type\":\"string\",\"example\":\"empty\"},\"label\":{\"type\":\"string\",\"example\":\"Try Again\"},\"weight\":{\"type\":\"number\",\"example\":0.3}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/prize-wheel - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "7ffc1a1c-3929-4329-8263-203b0e938fb0",
      "name": "Prize Wheels",
      "description": {
        "content": "Endpoints provided by _Prize Wheels_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b0251045-2eb8-4d3d-82cf-16f95731f6a6",
          "name": "List all available prize wheels",
          "request": {
            "name": "List all available prize wheels",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "prize-wheels",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1d48935f-3d20-4e06-ac86-fa15e340db84",
              "name": "List all prize wheels with their associated ID",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "prize-wheels",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5f05b989a44b5e14008b4590\"\n    }\n  ],\n  \"total\": 1\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "af714a46-7993-42a2-9be5-d443d45e59af",
              "name": "Customer not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "prize-wheels",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"NotFoundException\",\n  \"code\": 160212,\n  \"message\": \"Customer not Found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f258f30e-116c-415a-af23-9cfddac4e770",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/prize-wheels/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/prize-wheels/ - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/prize-wheels/ - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"required\":[\"data\"],\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44b5e14008b4590\"}}}},\"total\":{\"type\":\"number\",\"example\":1}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/prize-wheels/ - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "12c49a1a-3c74-4c5e-8aa8-a24d6005b329",
          "name": "List all prize wheel slices for the specified prize wheel draw",
          "request": {
            "name": "List all prize wheel slices for the specified prize wheel draw",
            "description": {
              "content": "This endpoint provides all information regarding each individual slice of the prize wheel.\n\nExisting Antavo rewards can be used in a slice and the full reward information can be returned with the slice information using the field query.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "prize-wheels",
                ":pw_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Provides additional information in the response. Currently only options.reward",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "options.reward"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The Unique Prize wheel ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "pw_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cdb9b235-3fdf-4521-8880-f67ed0a1eb94",
              "name": "List all prize wheel slices",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "prize-wheels",
                    ":pw_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "fields",
                      "value": "options.reward"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The Unique Prize wheel ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "pw_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"points\": 120,\n  \"options\": [\n    {\n      \"id\": \"5f05b989a44b5e14008b4590\",\n      \"type\": \"empty\",\n      \"label\": {\n        \"en\": \"Reward #1\"\n      },\n      \"weight\": 50,\n      \"win_text\": {\n        \"en\": \"You won Reward #1\"\n      }\n    },\n    {\n      \"id\": \"5f05b989a44b5e14008b4590\",\n      \"type\": \"empty\",\n      \"label\": {\n        \"en\": \"Reward #1\"\n      },\n      \"weight\": 50,\n      \"win_text\": {\n        \"en\": \"You won Reward #1\"\n      }\n    }\n  ],\n  \"_actions\": {\n    \"enter\": {\n      \"method\": \"POST\",\n      \"url\": \"http://hRjOGlnzsgPcQmS.cmdpth+ga-iB7+vICiG93BQEUtVatJ9PPbOmwMHIs8XL0dayW.\"\n    }\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "35e2e8b0-cf5c-445b-94ee-c92e9ed46b53",
              "name": "Missing/wrong input data",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "prize-wheels",
                    ":pw_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "fields",
                      "value": "options.reward"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The Unique Prize wheel ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "pw_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"NotFoundException\",\n  \"code\": 0,\n  \"message\": \"Prize wheel not Found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d399aae4-8f4b-4a6a-95e1-3b8d78c63df1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/prize-wheels/:pw_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/prize-wheels/:pw_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/prize-wheels/:pw_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"required\":[\"points\",\"options\",\"_actions\"],\"properties\":{\"points\":{\"type\":\"integer\",\"example\":120},\"options\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44b5e14008b4590\"},\"type\":{\"type\":\"string\",\"enum\":[\"reward\",\"empty\"],\"example\":\"empty\"},\"label\":{\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward #1\"}}},\"weight\":{\"type\":\"number\",\"example\":50},\"win_text\":{\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"You won Reward #1\"}}}}}},\"_actions\":{\"type\":\"object\",\"properties\":{\"enter\":{\"type\":\"object\",\"required\":[\"method\",\"url\"],\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"POST\"},\"url\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"/customers/c987654/prize-wheels/5f000980987adf\"}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/prize-wheels/:pw_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "d09687e7-6653-4508-80a6-c40d727cc279",
          "name": "Enters customer into the specified prize wheel draw",
          "request": {
            "name": "Enters customer into the specified prize wheel draw",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "prize-wheels",
                ":pw_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The Unique Prize wheel ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "pw_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "64c93718-ffa3-4211-84b4-8a00b5de2fb3",
              "name": "Get random slice from options",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "prize-wheels",
                    ":pw_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The Unique Prize wheel ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "pw_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"60b65e666215df2e3f000010\",\n  \"type\": \"reward\",\n  \"label\": {\n    \"en\": \"Simple reward\"\n  },\n  \"weight\": \"50%\",\n  \"win_text\": {\n    \"en\": \"Congratulations!\"\n  },\n  \"_actions\": {\n    \"claim\": {\n      \"method\": \"POST\",\n      \"url\": \"/customers/001/activities/rewards/6070545656bfb26685000017/claim\\\"\"\n    },\n    \"enter\": {\n      \"method\": \"POST\",\n      \"url\": \"/customers/001/prize-wheels/\"\n    }\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f42bdba1-45f6-40fa-be93-034a71c52103",
              "name": "Bad request",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "prize-wheels",
                    ":pw_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The Unique Prize wheel ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "pw_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"BadRequestException\",\n  \"code\": 0,\n  \"message\": \"You can't spin, try again in:  17 minutes\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4c988fc5-5004-4d7b-9219-d1e8863677d4",
              "name": "Missing/wrong input data",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "prize-wheels",
                    ":pw_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The Unique Prize wheel ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "pw_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"NotFoundException\",\n  \"code\": 0,\n  \"message\": \"Prize wheel not Found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f45c688d-b411-4720-b8a3-c65875ec4aed",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/prize-wheels/:pw_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/prize-wheels/:pw_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/prize-wheels/:pw_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"required\":[\"points\",\"options\",\"_actions\"],\"properties\":{\"points\":{\"type\":\"integer\",\"example\":120},\"options\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44b5e14008b4590\"},\"type\":{\"type\":\"string\",\"enum\":[\"reward\",\"empty\"],\"example\":\"empty\"},\"label\":{\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward #1\"}}},\"weight\":{\"type\":\"number\",\"example\":50},\"win_text\":{\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"You won Reward #1\"}}}}}},\"_actions\":{\"type\":\"object\",\"properties\":{\"enter\":{\"type\":\"object\",\"required\":[\"method\",\"url\"],\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"POST\"},\"url\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"/customers/c987654/prize-wheels/5f000980987adf\"}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/prize-wheels/:pw_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "9ba029e0-a36b-49d7-933a-72cf83697e36",
      "name": "Quizzes",
      "description": {
        "content": "Endpoints provided by the _Quizzes_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6974aa74-81c0-4958-aa45-5695d90a4d3a",
          "name": "List all Quiz activities",
          "request": {
            "name": "List all Quiz activities",
            "description": {
              "content": "List all Quiz activities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "quizzes"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique Customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "58148a30-5554-4782-95a9-41db4ad33a01",
              "name": "List of all available quizzes",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "quizzes"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique Customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"culpa non exercitation qui\",\n      \"title\": \"enim\",\n      \"description\": \"ut irure fugiat\",\n      \"status\": \"scheduled\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 46450147,\n      \"quiz_url\": \"qui adipisicing tempor commodo quis\"\n    },\n    {\n      \"id\": \"ipsum qui nulla minim\",\n      \"title\": \"ullamco\",\n      \"description\": \"do est culpa deserunt amet\",\n      \"status\": \"active\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 69854580,\n      \"quiz_url\": \"culpa\"\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5dc35a1a-eac6-419b-acd7-cb012c257b39",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/quizzes - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/quizzes - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/quizzes - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"ListallQuizactivitiesResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"QuizActivity\",\"required\":[\"id\",\"title\",\"description\",\"status\",\"image\",\"points\",\"quiz_url\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique activity ID\",\"examples\":[\"5c17c37f71f86e7f798b4579\"]},\"title\":{\"type\":\"string\",\"examples\":[\"Quiz activity\"]},\"description\":{\"type\":\"string\",\"examples\":[\"This is the long description of the quiz activity\"]},\"status\":{\"title\":\"Status7\",\"enum\":[\"scheduled\",\"active\",\"inactive\",\"archived\",\"completed\",\"failed\",\"expired\"],\"type\":\"string\",\"examples\":[\"active\"]},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"description\":\"Points rewarded if customer provide the correct answer.\",\"contentEncoding\":\"int32\",\"examples\":[2]},\"quiz_url\":{\"type\":\"string\",\"description\":\"An url for the quiz details api endpoint.\"}},\"description\":\"This entity has the usual activity properties\"},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/quizzes - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f3d4a28a-9f72-4ec5-b35e-d5edef9c2d14",
          "name": "Answering a Quiz",
          "request": {
            "name": "Answering a Quiz",
            "description": {
              "content": "Answering a Quiz",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "quizzes",
                ":quiz_id",
                "earn"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Quiz ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "quiz_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Answer index",
                    "type": "text/plain"
                  },
                  "key": "answer",
                  "value": "-88400043"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a1bd8498-2037-4dc9-a4b1-a764e3276054",
              "name": "Quiz completed",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "quizzes",
                    ":quiz_id",
                    "earn"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Quiz ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "quiz_id"
                    }
                  ]
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) ",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "nisi officia ipsum id"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Answer index",
                        "type": "text/plain"
                      },
                      "key": "answer",
                      "value": "-88400043"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"is_correct\": true,\n  \"message\": \"fugiat elit Duis\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "19c494df-e6ac-45fb-be41-65ba22ad2762",
              "name": "Flow or question not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "quizzes",
                    ":quiz_id",
                    "earn"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Quiz ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "quiz_id"
                    }
                  ]
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "(Required) ",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "nisi officia ipsum id"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Answer index",
                        "type": "text/plain"
                      },
                      "key": "answer",
                      "value": "-88400043"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9ebd3dfb-d3ed-49f9-9bc1-7b74b53f196e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/activities/quizzes/:quiz_id/earn - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/activities/quizzes/:quiz_id/earn - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/activities/quizzes/:quiz_id/earn - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"AnsweringaQuizResponse\",\"type\":\"object\",\"properties\":{\"is_correct\":{\"type\":\"boolean\",\"description\":\"A boolean value based on the submitted answer was correct or not\",\"examples\":[true]},\"message\":{\"type\":\"string\",\"description\":\"A success or error message(it can be set on quiz activity) based on the submitted answer was correct or not\",\"examples\":[\"Congratulations! Your answer was right!\"]}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/activities/quizzes/:quiz_id/earn - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3e1d3d7d-8106-4367-beb6-f2a7b131c26a",
          "name": "Quiz details",
          "request": {
            "name": "Quiz details",
            "description": {
              "content": "Quiz details",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "quizzes",
                ":quiz_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique customer identifier",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique quiz identifier",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "quiz_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f4890997-88ca-4586-bdbf-d3ffd5876751",
              "name": "available quiz card",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "quizzes",
                    ":quiz_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) unique customer identifier",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) unique quiz identifier",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "quiz_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"sint fugiat\",\n  \"title\": \"mollit\",\n  \"description\": \"sit id in proident cupidatat\",\n  \"status\": \"inactive\",\n  \"image\": {\n    \"small\": \"https://example.com/image0001_small.jpg\",\n    \"medium\": \"https://example.com/image0001_medium.jpg\",\n    \"large\": \"https://example.com/image0001_large.jpg\"\n  },\n  \"points\": -24652990,\n  \"quiz_url\": \"ipsum fugiat\",\n  \"answers\": [\n    \"quis dolore\",\n    \"nulla mollit\"\n  ],\n  \"correct_answer\": \"ex tempor laborum\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d5b8323c-2610-4138-a5af-b9bfb81e4cc1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/quizzes/:quiz_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/quizzes/:quiz_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/quizzes/:quiz_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"QuizDetailsResponse\",\"required\":[\"id\",\"title\",\"description\",\"status\",\"image\",\"points\",\"quiz_url\",\"answers\",\"correct_answer\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique activity ID\",\"examples\":[\"5c17c37f71f86e7f798b4579\"]},\"title\":{\"type\":\"string\",\"examples\":[\"Quiz activity\"]},\"description\":{\"type\":\"string\",\"examples\":[\"This is the long description of the quiz activity\"]},\"status\":{\"title\":\"Status7\",\"enum\":[\"scheduled\",\"active\",\"inactive\",\"archived\",\"completed\",\"failed\",\"expired\"],\"type\":\"string\",\"examples\":[\"active\"]},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"description\":\"Points rewarded if customer provide the correct answer.\",\"contentEncoding\":\"int32\",\"examples\":[2]},\"quiz_url\":{\"type\":\"string\",\"description\":\"An url for the quiz details api endpoint.\"},\"answers\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"Possible answers list.\",\"examples\":[[\"answer1\",\"answer2\"]]},\"correct_answer\":{\"type\":\"string\",\"description\":\"String value of the correct answer.\",\"examples\":[\"answer1\"]}},\"description\":\"This entity has the usual activity properties\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/quizzes/:quiz_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "e95c59ef-b7be-442e-8eca-545c79259aea",
      "name": "Receipt Scanning",
      "description": {
        "content": "Endpoints provided by _Receipt Scanning_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "db7bbed1-ad31-42f4-b532-1172ad319d7a",
          "name": "Customer's receipts",
          "request": {
            "name": "Customer's receipts",
            "description": {
              "content": "Customer's receipts",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "receipts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique Customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ff6fe7d7-d223-423b-89ec-0ca3b3b86b01",
              "name": "List of customer's receipts",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "receipts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique Customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"_id\": \"5f05b989a44b5e14008b4590\",\n      \"template\": \"5f9178dd65f00915008b457a\",\n      \"status\": \"pending\",\n      \"store\": \"foo_store\",\n      \"image\": \"https://custom-image.com/img/2321\"\n    },\n    {\n      \"_id\": \"5f05b989a44b5e14008b4590\",\n      \"template\": \"5f9178dd65f00915008b457a\",\n      \"status\": \"pending\",\n      \"store\": \"foo_store\",\n      \"image\": \"https://custom-image.com/img/2321\"\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5801fbcc-b419-4cf3-aa64-5c5655471d14",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/receipts - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/receipts - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/receipts - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"CustomerReceiptScannings\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"Datum\",\"type\":\"object\",\"properties\":{\"_id\":{\"type\":\"string\",\"example\":\"5f05b989a44b5e14008b4590\"},\"template\":{\"type\":\"string\",\"example\":\"5f9178dd65f00915008b457a\"},\"status\":{\"type\":\"string\",\"example\":\"pending\"},\"store\":{\"type\":\"string\",\"example\":\"foo_store\"},\"image\":{\"type\":\"string\",\"example\":\"https://custom-image.com/img/2321\"}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/receipts - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "0fb92b86-2b99-480e-bffd-0264e3a9de2b",
          "name": "Upload a Receipt",
          "request": {
            "name": "Upload a Receipt",
            "description": {
              "content": "Upload a Receipt",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "receipts"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique Customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "(Required) Image of the Receipt",
                    "type": "text/plain"
                  },
                  "key": "image",
                  "type": "file"
                },
                {
                  "description": {
                    "content": "Associate with a Store",
                    "type": "text/plain"
                  },
                  "key": "store",
                  "value": "nostrud",
                  "type": "text"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "789752ee-0ba0-42ba-9b42-6662756e5ba2",
              "name": "Success message",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "receipts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique Customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "(Required) Image of the Receipt",
                        "type": "text/plain"
                      },
                      "key": "image",
                      "type": "file"
                    },
                    {
                      "description": {
                        "content": "Associate with a Store",
                        "type": "text/plain"
                      },
                      "key": "store",
                      "value": "nostrud",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "Accepted",
              "code": 202,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Thank you for your upload!\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7ddc4c03-d9f1-4694-8ac7-2ab65c036ebd",
              "name": "Missing required parameter or not supported format provided",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "receipts"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique Customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "(Required) Image of the Receipt",
                        "type": "text/plain"
                      },
                      "key": "image",
                      "type": "file"
                    },
                    {
                      "description": {
                        "content": "Associate with a Store",
                        "type": "text/plain"
                      },
                      "key": "store",
                      "value": "nostrud",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f6ee3780-691e-4d4c-89d9-3d5a58fe9374",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/receipts - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/receipts - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/receipts - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"ReceiptScanningUpload\",\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\",\"example\":\"Thank you for your upload!\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/receipts - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "9d61d7e5-5fb7-408a-a2dc-1480a5003261",
      "name": "Rewards",
      "description": {
        "content": "Endpoints provided by the _Rewards_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9f251b62-4bf5-420f-ab8f-0adbb42b82b0",
          "name": "Returns all available rewards for a customer",
          "request": {
            "name": "Returns all available rewards for a customer",
            "description": {
              "content": "Lists all available rewards for a customer.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "rewards"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Comma separated list of non-standard fields to be included  in the response. Accepted values: \n* claims - See the claimed rewards and associated information for each **currently** available reward.\n* custom_data - Access this field set in the reward configuration.\n* gallery  - Provides, where available,  image links specified in the reward configuration.\n* instructions - Access this field set in the reward configuration.\n* passes - Provides, where available, _actions, download links and deep links to wallet passes for the corresponding reward.\n* stock - Access this field set in the reward configuration.\n* terms - Access this field set in the reward configuration. ",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "aliquip in adipisicin"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Limits the number of events to be returned in one response. Other values are accessible by pagination made accessible via the offset.\nDefault value: 100",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "2326905"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Offsets the starting number of events to return. This is used in pagination in conjunction with the limit query.\nDefault value: 0",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "2326905"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "62dfb23f-1109-456e-be06-672919be0610",
              "name": "List of rewards",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "fields",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "limit",
                      "value": "2326905"
                    },
                    {
                      "key": "offset",
                      "value": "2326905"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"type\": \"coupon\",\n      \"status\": \"active\",\n      \"title\": \"Reward Example\",\n      \"description\": \"Example reward description\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 700,\n      \"message\": \"tempor incididunt\",\n      \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n      \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n      \"gallery\": [\n        {\n          \"small\": \"https://example.com/image0001_small.jpg\",\n          \"medium\": \"https://example.com/image0001_medium.jpg\",\n          \"large\": \"https://example.com/image0001_large.jpg\"\n        },\n        {\n          \"small\": \"https://example.com/image0001_small.jpg\",\n          \"medium\": \"https://example.com/image0001_medium.jpg\",\n          \"large\": \"https://example.com/image0001_large.jpg\"\n        }\n      ],\n      \"terms\": \"enim eu\",\n      \"instructions\": \"labore dolore sint aliquip\",\n      \"_actions\": {\n        \"complete\": {\n          \"method\": \"POST\",\n          \"url\": \"/customers/c987654/activities/rewards/5c17c37f71f86e7f798b4576/claim\"\n        }\n      }\n    },\n    {\n      \"id\": \"5c17c37f71f86e7f798b4576\",\n      \"type\": \"coupon\",\n      \"status\": \"active\",\n      \"title\": \"Reward Example\",\n      \"description\": \"Example reward description\",\n      \"image\": {\n        \"small\": \"https://example.com/image0001_small.jpg\",\n        \"medium\": \"https://example.com/image0001_medium.jpg\",\n        \"large\": \"https://example.com/image0001_large.jpg\"\n      },\n      \"points\": 700,\n      \"message\": \"al\",\n      \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n      \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n      \"gallery\": [\n        {\n          \"small\": \"https://example.com/image0001_small.jpg\",\n          \"medium\": \"https://example.com/image0001_medium.jpg\",\n          \"large\": \"https://example.com/image0001_large.jpg\"\n        },\n        {\n          \"small\": \"https://example.com/image0001_small.jpg\",\n          \"medium\": \"https://example.com/image0001_medium.jpg\",\n          \"large\": \"https://example.com/image0001_large.jpg\"\n        }\n      ],\n      \"terms\": \"qui non\",\n      \"instructions\": \"culpa minim Excepteur dolor\",\n      \"_actions\": {\n        \"complete\": {\n          \"method\": \"POST\",\n          \"url\": \"/customers/c987654/activities/rewards/5c17c37f71f86e7f798b4576/claim\"\n        }\n      }\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "91692015-dbfe-462a-9483-891019188c65",
              "name": "Customer not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "fields",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "limit",
                      "value": "2326905"
                    },
                    {
                      "key": "offset",
                      "value": "2326905"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b917f988-19b1-41f5-a67a-996788f3bac8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/rewards - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/rewards - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/rewards - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"description\":\"Reward entity with all Activity properties and more\",\"required\":[\"id\",\"type\",\"status\",\"title\",\"description\",\"image\",\"points\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Unique activity ID\",\"example\":\"5c17c37f71f86e7f798b4576\"},\"title\":{\"type\":\"string\",\"example\":\"Reward Example\"},\"description\":{\"type\":\"string\",\"example\":\"Example reward description\"},\"status\":{\"type\":\"string\",\"example\":\"active\",\"enum\":[\"active\",\"scheduled\",\"expired\",\"inactive\"]},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"example\":700},\"message\":{\"type\":\"string\",\"description\":\"Custom message for when activity is restricted\"},\"type\":{\"type\":\"string\",\"enum\":[\"bidding\",\"content\",\"coupon\",\"custom\",\"download\",\"physical\",\"promotion\",\"virtual\"],\"example\":\"coupon\"},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Starting date of the reward, if defined\",\"example\":\"2020-07-21T12:00:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"End date of the reward, if defined\",\"example\":\"2020-12-21T12:00:00.000Z\"},\"gallery\":{\"type\":\"array\",\"description\":\"Image gallery. This field is returned only when explicitly requested via the 'fields' query parameter\",\"items\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}}},\"terms\":{\"type\":\"string\",\"description\":\"Terms & Conditions. This field is returned only when explicitly requested via the 'fields' query parameter\"},\"instructions\":{\"type\":\"string\",\"description\":\"Redeem instructions. This field is returned only when explicitly requested via the 'fields' query parameter\"},\"_actions\":{\"type\":\"object\",\"description\":\"Defines actions for the resource\",\"properties\":{\"complete\":{\"type\":\"object\",\"description\":\"Claim action endpoint\",\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"POST\"},\"url\":{\"type\":\"string\",\"format\":\"url\",\"example\":\"/customers/c987654/activities/rewards/5c17c37f71f86e7f798b4576/claim\"}}}}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/rewards - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "76e48d5a-c504-466c-ba86-f3ba9a1e0f8a",
          "name": "A detailed response for a specified reward",
          "request": {
            "name": "A detailed response for a specified reward",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "rewards",
                ":reward_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Comma separated list of non-standard fields to be included  in the response. Accepted values: \n* claims - See the claimed rewards and associated information for each **currently** available reward.\n* custom_data - Access this field set in the reward configuration.\n* gallery  - Provides, where available,  image links specified in the reward configuration.\n* instructions - Access this field set in the reward configuration.\n* passes - Provides, where available, _actions, download links and deep links to wallet passes for the corresponding reward.\n* stock - Access this field set in the reward configuration.\n* terms - Access this field set in the reward configuration. ",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "aliquip in adipisicin"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique customer identifier",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique reward identifier",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "reward_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "825d1c2f-7119-463c-9e46-ae0f382e59a9",
              "name": "available reward card",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards",
                    ":reward_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "fields",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) unique customer identifier",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) unique reward identifier",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"gallery\": [\n    {\n      \"small\": \"https://example.com/image0001_small.jpg\",\n      \"medium\": \"https://example.com/image0001_medium.jpg\",\n      \"large\": \"https://example.com/image0001_large.jpg\"\n    },\n    {\n      \"small\": \"https://example.com/image0001_small.jpg\",\n      \"medium\": \"https://example.com/image0001_medium.jpg\",\n      \"large\": \"https://example.com/image0001_large.jpg\"\n    }\n  ],\n  \"terms\": \"Terms & Conditions\",\n  \"instructions\": \"Redeem instructions\",\n  \"type\": \"coupon\",\n  \"_actions\": {\n    \"complete\": {\n      \"method\": \"POST\",\n      \"answer\": \"http://gtNDsmn.icwvpIYKaBzowYQ8eOh5kfCs\"\n    }\n  },\n  \"id\": \"5e847240ce6d0514008b4587\",\n  \"status\": \"active\",\n  \"title\": \"Reward Example\",\n  \"description\": \"Example reward description\",\n  \"image\": {\n    \"small\": \"https://example.com/image0001_small.jpg\",\n    \"medium\": \"https://example.com/image0001_medium.jpg\",\n    \"large\": \"https://example.com/image0001_large.jpg\"\n  },\n  \"points\": 700\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e4a06c61-9a96-4327-b2f3-9ddfa5f7b44b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/rewards/:reward_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/rewards/:reward_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/rewards/:reward_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Reward entity with all Activity properties and more\",\"required\":[\"gallery\",\"terms\",\"instructions\",\"type\",\"_actions\",\"id\",\"status\",\"title\",\"description\",\"image\",\"points\"],\"properties\":{\"gallery\":{\"type\":\"array\",\"description\":\"Image gallery. This field is returned only when explicitly requested via the 'fields' query parameter\",\"items\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}}},\"terms\":{\"type\":\"string\",\"example\":\"Terms & Conditions\",\"description\":\"Terms & Conditions. This field is returned only when explicitly requested via the 'fields' query parameter\"},\"instructions\":{\"type\":\"string\",\"example\":\"Redeem instructions\",\"description\":\"Redeem instructions. This field is returned only when explicitly requested via the 'fields' query parameter\"},\"type\":{\"type\":\"string\",\"example\":\"coupon\"},\"_actions\":{\"type\":\"object\",\"description\":\"Defines actions for the resource\",\"properties\":{\"complete\":{\"type\":\"object\",\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"POST\"},\"answer\":{\"type\":\"string\",\"format\":\"uri\",\"description\":\"Endpoint to get reward claim\",\"example\":\"/customers/c987654/activities/rewards/5e847240ce6d0514008b4587/claim\"}}}}},\"id\":{\"type\":\"string\",\"example\":\"5e847240ce6d0514008b4587\"},\"status\":{\"type\":\"string\",\"example\":\"active\"},\"title\":{\"type\":\"string\",\"example\":\"Reward Example\"},\"description\":{\"type\":\"string\",\"example\":\"Example reward description\"},\"image\":{\"type\":\"object\",\"description\":\"Offers different sizes for the same image asset\",\"required\":[\"small\",\"medium\",\"large\"],\"properties\":{\"small\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_small.jpg\"},\"medium\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_medium.jpg\"},\"large\":{\"type\":\"string\",\"format\":\"uri\",\"example\":\"https://example.com/image0001_large.jpg\"}}},\"points\":{\"type\":\"integer\",\"example\":700}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/rewards/:reward_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6d58fb47-361e-4089-9b5e-51648c65e41e",
          "name": "Claim a specific Reward for a specified customer",
          "request": {
            "name": "Claim a specific Reward for a specified customer",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "rewards",
                ":reward_id",
                "claim"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Returns additional objects in the response, using a comma separated list. Options: <br> <b>customer</b> - The complete Customer response object <br> <b>reward</b> - The  complete Reward response object. ",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "customer"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique reward ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "reward_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Points to be used when claiming a dynamic Reward.",
                    "type": "text/plain"
                  },
                  "key": "points",
                  "value": "100"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "A dynamically bundled reward is created with count being the number of times  the reward is claimed",
                    "type": "text/plain"
                  },
                  "key": "count",
                  "value": "5"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7ceae5e4-e430-4018-8d63-af0c03e4dc1b",
              "name": "Claim result, a Coupon object is returned only for Coupon Rewards",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards",
                    ":reward_id",
                    "claim"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "fields",
                      "value": "customer"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique reward ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "Points to be used when claiming a dynamic Reward.",
                        "type": "text/plain"
                      },
                      "key": "points",
                      "value": "100"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "A dynamically bundled reward is created with count being the number of times  the reward is claimed",
                        "type": "text/plain"
                      },
                      "key": "count",
                      "value": "5"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"spent\": 700,\n  \"coupon\": {\n    \"code\": \"ABC123\",\n    \"status\": \"claimed\",\n    \"created_at\": \"1986-02-03T17:44:51.862Z\",\n    \"type\": \"amount\",\n    \"value\": 2.5,\n    \"currency\": \"EUR\",\n    \"claimed_at\": \"1966-04-16T20:44:53.846Z\",\n    \"redeemed_at\": \"1954-07-13T17:57:35.287Z\",\n    \"expires_at\": \"1992-10-09T01:06:01.811Z\",\n    \"name\": \"cillum\",\n    \"pool\": \"Example coupon pool#2\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4b1b44bc-477c-4ad1-8091-a6a65e415192",
              "name": "Customer or reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards",
                    ":reward_id",
                    "claim"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "fields",
                      "value": "customer"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique reward ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "Points to be used when claiming a dynamic Reward.",
                        "type": "text/plain"
                      },
                      "key": "points",
                      "value": "100"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "A dynamically bundled reward is created with count being the number of times  the reward is claimed",
                        "type": "text/plain"
                      },
                      "key": "count",
                      "value": "5"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7ae3f04-ea51-4078-811d-f884014b8dae",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/activities/rewards/:reward_id/claim - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/activities/rewards/:reward_id/claim - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/activities/rewards/:reward_id/claim - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"required\":[\"spent\"],\"properties\":{\"spent\":{\"type\":\"integer\",\"example\":700},\"coupon\":{\"type\":\"object\",\"required\":[\"code\",\"status\",\"created_at\",\"type\",\"value\"],\"properties\":{\"code\":{\"description\":\"The coupon code\",\"type\":\"string\",\"example\":\"ABC123\"},\"status\":{\"description\":\"The status of the coupon whether it was only claimed by the customer or redeemed (already used)\",\"type\":\"string\",\"enum\":[\"claimed\",\"redeemed\"],\"example\":\"claimed\"},\"type\":{\"description\":\"The coupon type, whether it is a percentage coupon, a monetary coupon, or free shipping\",\"type\":\"string\",\"enum\":[\"percentage\",\"amount\",\"free_shipping\"],\"example\":\"amount\"},\"value\":{\"description\":\"Arbitrary number as coupon value for amount type coupons, or a percentage number (0-100)\",\"type\":\"number\",\"example\":2.5},\"currency\":{\"description\":\"ISO 4217 alphabetic code of the coupon currency, if defined\",\"type\":\"string\",\"example\":\"EUR\"},\"created_at\":{\"description\":\"The date at which the coupon was created\",\"type\":\"string\",\"format\":\"date-time\"},\"claimed_at\":{\"description\":\"The date at which the customer claimed the reward\",\"type\":\"string\",\"format\":\"date-time\"},\"redeemed_at\":{\"description\":\"The date at which the customer used the coupon code\",\"type\":\"string\",\"format\":\"date-time\"},\"expires_at\":{\"description\":\"The date until which the coupon is usable\",\"type\":\"string\",\"format\":\"date-time\"},\"name\":{\"description\":\"Name of the coupon, which is inherited from pool or reward\",\"type\":\"string\",\"example\":null},\"pool\":{\"description\":\"The source coupon pool from which the coupon originated\",\"type\":\"string\",\"example\":\"Example coupon pool#2\"}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/activities/rewards/:reward_id/claim - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f65deee3-b81a-4788-a113-a0a6e81f0d5a",
          "name": "Revoke a previously claimed Reward",
          "request": {
            "name": "Revoke a previously claimed Reward",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "rewards",
                ":reward_id",
                "revoke"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique reward ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "reward_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Reward Claim event unique ID",
                    "type": "text/plain"
                  },
                  "key": "event",
                  "value": "ABC-CDE-1234"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "59da264e-3c93-46a2-82d5-634ff07ce84f",
              "name": "Successful revoke",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards",
                    ":reward_id",
                    "revoke"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique reward ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "Reward Claim event unique ID",
                        "type": "text/plain"
                      },
                      "key": "event",
                      "value": "ABC-CDE-1234"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8d95ab24-5220-4b9e-8f01-ca0d9642987c",
              "name": "Claim cannot be revoked",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards",
                    ":reward_id",
                    "revoke"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique reward ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "Reward Claim event unique ID",
                        "type": "text/plain"
                      },
                      "key": "event",
                      "value": "ABC-CDE-1234"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7679ed64-6bc3-4b4a-95ec-dded0a934d11",
              "name": "Customer or reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards",
                    ":reward_id",
                    "revoke"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique reward ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "Reward Claim event unique ID",
                        "type": "text/plain"
                      },
                      "key": "event",
                      "value": "ABC-CDE-1234"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b826a307-8d07-4608-9933-39c44e76d036",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/activities/rewards/:reward_id/revoke - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7dd53b7b-3d71-44ae-895b-874ad5a41018",
          "name": "Create a bid for the customer for the specified bidding Reward",
          "request": {
            "name": "Create a bid for the customer for the specified bidding Reward",
            "description": {
              "content": "The endpoint automatically calculates and submits a bid for a specified customer on the specified bidding reward. The bid amount is based on the current highest bid and the bid step, which is set in the Antavo Backoffice.\nManually set value for bids is currently not possible",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "rewards",
                ":reward_id",
                "bid"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique reward ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "reward_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "14c36ec3-403f-47fc-9e0f-cd708d712bef",
              "name": "Successful bid submitted",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards",
                    ":reward_id",
                    "bid"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique reward ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"instructions\": \"Bidding reward\",\n  \"redeem_instructions\": \"Bidding reward\",\n  \"type\": \"bidding\",\n  \"_actions\": {\n    \"complete\": {\n      \"method\": \"POST\",\n      \"url\": \"/customers/[customer_id]/activities/rewards/613d1e0615d3b87b0b000004/bid\"\n    }\n  },\n  \"starts_at\": \"2021-09-10T21:21:00.000Z\",\n  \"ends_at\": \"2021-09-30T21:21:00.000Z\",\n  \"bid_step\": 10,\n  \"id\": \"613d1e0615d3b87b0b000004\",\n  \"status\": \"active\",\n  \"title\": \"Bidding reward\",\n  \"description\": \"Bidding reward\",\n  \"image\": {},\n  \"points\": 20\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5c151c6d-4a68-43cc-9d5e-f589a460ee2e",
              "name": "Customer or reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "rewards",
                    ":reward_id",
                    "bid"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique reward ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "702d2ab6-2ecd-416b-8910-9c49f2d23cae",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/activities/rewards/:reward_id/bid - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/activities/rewards/:reward_id/bid - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/activities/rewards/:reward_id/bid - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"instructions\":{\"type\":\"string\",\"example\":\"Bidding reward\"},\"redeem_instructions\":{\"type\":\"string\",\"example\":\"Bidding reward\"},\"type\":{\"type\":\"string\",\"example\":\"bidding\"},\"_actions\":{\"type\":\"object\",\"properties\":{\"complete\":{\"type\":\"object\",\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"POST\"},\"url\":{\"type\":\"string\",\"example\":\"/customers/[customer_id]/activities/rewards/613d1e0615d3b87b0b000004/bid\"}}}}},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2021-09-10T21:21:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2021-09-30T21:21:00.000Z\"},\"bid_step\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":10},\"id\":{\"type\":\"string\",\"example\":\"613d1e0615d3b87b0b000004\"},\"status\":{\"type\":\"string\",\"example\":\"active\"},\"title\":{\"type\":\"string\",\"example\":\"Bidding reward\"},\"description\":{\"type\":\"string\",\"example\":\"Bidding reward\"},\"image\":{\"type\":\"object\",\"properties\":null},\"points\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":20}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/activities/rewards/:reward_id/bid - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "d81efa3a-0aab-4f09-85a6-e132a501ed85",
          "name": "Response contains all Claimed Rewards for a specified customer",
          "request": {
            "name": "Response contains all Claimed Rewards for a specified customer",
            "description": {
              "content": "Response contains all Claimed Rewards for a specified customer",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "rewards"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Limits the number of events to be returned in one response. Other values are accessible by pagination made accessible via the offset.\nDefault value : 100",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "2326905"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Offsets the starting number of events to return. This is used in pagination in conjunction with the limit query. \nDefault value : 0",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "2326905"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Comma separated list of non-standard fields to be included  in the response. Accepted values: \n* claims - See the claimed rewards and associated information for each **currently** available reward.\n* custom_data - Access this field set in the reward configuration.\n* gallery  - Provides, where available,  image links specified in the reward configuration.\n* instructions - Access this field set in the reward configuration.\n* passes - Provides, where available, _actions, download links and deep links to wallet passes for the corresponding reward.\n* stock - Access this field set in the reward configuration.\n* terms - Access this field set in the reward configuration. ",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "aliquip in adipisicin"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique Customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ada12476-4a5e-4aa4-956a-981b77903712",
              "name": "List of Reward claims for Customer",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "rewards"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "2326905"
                    },
                    {
                      "key": "offset",
                      "value": "2326905"
                    },
                    {
                      "key": "fields",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique Customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"597092f6d2edb9c1748b456d\",\n      \"title\": \"Special Reward\",\n      \"created_at\": \"2022-04-05T23:44:10.194Z\",\n      \"last_claimed_at\": \"2008-02-21T10:32:05.174Z\",\n      \"claims\": 3,\n      \"spent\": 450\n    },\n    {\n      \"id\": \"597092f6d2edb9c1748b456d\",\n      \"title\": \"Special Reward\",\n      \"created_at\": \"1992-06-12T22:49:52.052Z\",\n      \"last_claimed_at\": \"1953-06-02T12:18:44.804Z\",\n      \"claims\": 3,\n      \"spent\": 450\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4cced9a4-fa8f-46a9-b525-fc5554d69f35",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/rewards - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/rewards - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/rewards - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Lists reward claims\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"title\",\"created_at\",\"last_claimed_at\",\"claims\",\"points\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Reward ID\",\"example\":\"597092f6d2edb9c1748b456d\"},\"title\":{\"type\":\"string\",\"description\":\"Localized reward title\",\"example\":\"Special Reward\"},\"created_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp of first claiming the reward\"},\"last_claimed_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Timestamp of last claiming the reward\"},\"claims\":{\"type\":\"integer\",\"description\":\"Number of claims\",\"example\":3},\"spent\":{\"type\":\"integer\",\"description\":\"Total points spent on the reward\",\"example\":450}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/rewards - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "613230c5-1905-4060-a30d-7b3e9b9829b1",
          "name": "Returns all available rewards",
          "request": {
            "name": "Returns all available rewards",
            "description": {
              "content": "This module lists all available rewards and uses filtering by stores as an example of filtering by parameter.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                "rewards",
                "reward"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filters the return rewards by stores, using a valid Antavo store ID. This requires the Antavo store module to be enabled and fully configured.",
                    "type": "text/plain"
                  },
                  "key": "stores",
                  "value": "aliquip in adipisicin"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2f069d62-b0f5-4b0c-a38b-b2ff5897da2c",
              "name": "List of all entities",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "stores",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5f05b989a44bc1c44008b4590\",\n      \"name\": {\n        \"en\": \"Reward name\"\n      },\n      \"description\": {\n        \"en\": \"Reward description\"\n      },\n      \"redeem_instructions\": {\n        \"en\": \"Redeem instructions\"\n      },\n      \"terms\": {\n        \"en\": \"Terms & Conditions\"\n      },\n      \"type\": \"coupon\",\n      \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n      \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n      \"message\": \"Message\",\n      \"claim_button_label\": {\n        \"en\": \"Claim\"\n      },\n      \"category\": {\n        \"id\": \"5ef1ad79a44b5e15008b456e\"\n      },\n      \"segments\": [\n        {\n          \"id\": \"5ef1ad79a44b5e15008b456e\"\n        },\n        {\n          \"id\": \"5ef1ad79a44b5e15008b456e\"\n        }\n      ],\n      \"cost\": \"150.5\",\n      \"hide_restricted\": false,\n      \"hidden\": false,\n      \"restricted_message\": {\n        \"en\": \"Message\"\n      },\n      \"repeat_interval\": \"1 week\",\n      \"stock\": 42,\n      \"max_claims\": 90,\n      \"notifications\": false,\n      \"user_notifications\": false,\n      \"status\": \"inactive\",\n      \"price\": {\n        \"EUR\": 500\n      }\n    },\n    {\n      \"id\": \"5f05b989a44bc1c44008b4590\",\n      \"name\": {\n        \"en\": \"Reward name\"\n      },\n      \"description\": {\n        \"en\": \"Reward description\"\n      },\n      \"redeem_instructions\": {\n        \"en\": \"Redeem instructions\"\n      },\n      \"terms\": {\n        \"en\": \"Terms & Conditions\"\n      },\n      \"type\": \"coupon\",\n      \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n      \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n      \"message\": \"Message\",\n      \"claim_button_label\": {\n        \"en\": \"Claim\"\n      },\n      \"category\": {\n        \"id\": \"5ef1ad79a44b5e15008b456e\"\n      },\n      \"segments\": [\n        {\n          \"id\": \"5ef1ad79a44b5e15008b456e\"\n        },\n        {\n          \"id\": \"5ef1ad79a44b5e15008b456e\"\n        }\n      ],\n      \"cost\": \"150.5\",\n      \"hide_restricted\": false,\n      \"hidden\": false,\n      \"restricted_message\": {\n        \"en\": \"Message\"\n      },\n      \"repeat_interval\": \"1 week\",\n      \"stock\": 42,\n      \"max_claims\": 90,\n      \"notifications\": false,\n      \"user_notifications\": false,\n      \"status\": \"inactive\",\n      \"price\": {\n        \"EUR\": 500\n      }\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ec04cbcc-5c60-4d9f-928c-cc6d47b7e22c",
              "name": "Reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "stores",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "779206a1-806f-4748-9a10-434c2a13922c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/entities/rewards/reward - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/entities/rewards/reward - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/entities/rewards/reward - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RewardsResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"RewardResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44bc1c44008b4590\"},\"name\":{\"title\":\"Name\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward name\"}}},\"description\":{\"title\":\"Description\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward description\"}}},\"redeem_instructions\":{\"title\":\"RedeemInstructions\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Redeem instructions\"}}},\"terms\":{\"title\":\"Terms\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Terms & Conditions\"}}},\"type\":{\"type\":\"string\",\"example\":\"coupon\"},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-07-21T12:00:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-12-21T12:00:00.000Z\"},\"message\":{\"type\":\"string\",\"example\":\"Message\"},\"claim_button_label\":{\"title\":\"ClaimButtonLabel\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Claim\"}}},\"category\":{\"title\":\"Category\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"segments\":{\"type\":\"array\",\"items\":{\"title\":\"Segment\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"description\":\"\"},\"cost\":{\"type\":\"string\",\"example\":\"150.5\"},\"hide_restricted\":{\"type\":\"boolean\",\"example\":false},\"hidden\":{\"type\":\"boolean\",\"example\":false},\"restricted_message\":{\"title\":\"RestrictedMessage\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Message\"}}},\"repeat_interval\":{\"type\":\"string\",\"example\":\"1 week\"},\"stock\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":42},\"max_claims\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":90},\"notifications\":{\"type\":\"boolean\",\"example\":false},\"user_notifications\":{\"type\":\"boolean\",\"example\":false},\"status\":{\"type\":\"string\",\"example\":\"inactive\"},\"price\":{\"title\":\"Price\",\"type\":\"object\",\"properties\":{\"EUR\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":500}}}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/entities/rewards/reward - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ec202486-e78e-4476-916a-a78b393f534a",
          "name": "Create a new Reward using an API call",
          "request": {
            "name": "Create a new Reward using an API call",
            "description": {
              "content": "Rewards can be created using the following API call. The following queries are not an exhaustive list of available options.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                "rewards",
                "reward"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Reward name\",\n  \"description\": \"This is the description field\",\n  \"price\": 100,\n  \"type\": \"coupon\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3549df2b-75b0-498d-a30d-2fd0bf6f0356",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Reward name\",\n  \"description\": \"This is the description field\",\n  \"price\": 100,\n  \"type\": \"coupon\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"5f05b989a44bc1c44008b4590\",\n  \"name\": {\n    \"en\": \"Reward name\"\n  },\n  \"description\": {\n    \"en\": \"Reward description\"\n  },\n  \"redeem_instructions\": {\n    \"en\": \"Redeem instructions\"\n  },\n  \"terms\": {\n    \"en\": \"Terms & Conditions\"\n  },\n  \"type\": \"coupon\",\n  \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n  \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n  \"message\": \"Message\",\n  \"claim_button_label\": {\n    \"en\": \"Claim\"\n  },\n  \"category\": {\n    \"id\": \"5ef1ad79a44b5e15008b456e\"\n  },\n  \"segments\": [\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    },\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    }\n  ],\n  \"cost\": \"150.5\",\n  \"hide_restricted\": false,\n  \"hidden\": false,\n  \"restricted_message\": {\n    \"en\": \"Message\"\n  },\n  \"repeat_interval\": \"1 week\",\n  \"stock\": 42,\n  \"max_claims\": 90,\n  \"notifications\": false,\n  \"user_notifications\": false,\n  \"status\": \"inactive\",\n  \"price\": {\n    \"EUR\": 500\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6729bb58-a698-4ca9-8b54-effbcd62f094",
              "name": "Reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Reward name\",\n  \"description\": \"This is the description field\",\n  \"price\": 100,\n  \"type\": \"coupon\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ecf8e4b9-3567-4d32-8db3-7a93de6cb89a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/entities/rewards/reward - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/entities/rewards/reward - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/entities/rewards/reward - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RewardResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44bc1c44008b4590\"},\"name\":{\"title\":\"Name\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward name\"}}},\"description\":{\"title\":\"Description\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward description\"}}},\"redeem_instructions\":{\"title\":\"RedeemInstructions\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Redeem instructions\"}}},\"terms\":{\"title\":\"Terms\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Terms & Conditions\"}}},\"type\":{\"type\":\"string\",\"example\":\"coupon\"},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-07-21T12:00:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-12-21T12:00:00.000Z\"},\"message\":{\"type\":\"string\",\"example\":\"Message\"},\"claim_button_label\":{\"title\":\"ClaimButtonLabel\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Claim\"}}},\"category\":{\"title\":\"Category\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"segments\":{\"type\":\"array\",\"items\":{\"title\":\"Segment\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"description\":\"\"},\"cost\":{\"type\":\"string\",\"example\":\"150.5\"},\"hide_restricted\":{\"type\":\"boolean\",\"example\":false},\"hidden\":{\"type\":\"boolean\",\"example\":false},\"restricted_message\":{\"title\":\"RestrictedMessage\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Message\"}}},\"repeat_interval\":{\"type\":\"string\",\"example\":\"1 week\"},\"stock\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":42},\"max_claims\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":90},\"notifications\":{\"type\":\"boolean\",\"example\":false},\"user_notifications\":{\"type\":\"boolean\",\"example\":false},\"status\":{\"type\":\"string\",\"example\":\"inactive\"},\"price\":{\"title\":\"Price\",\"type\":\"object\",\"properties\":{\"EUR\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":500}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/entities/rewards/reward - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c2b02018-25e8-4ad1-864d-8adfb636c564",
          "name": "Returns all information regarding a specific reward",
          "request": {
            "name": "Returns all information regarding a specific reward",
            "description": {
              "content": "A detailed breakdown of all parameters for the specific reward is returned.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                "rewards",
                "reward",
                ":entity_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The unique id of the reward",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "entity_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c918d9a1-3ec1-405c-b046-c66b278aac17",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique id of the reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"5f05b989a44bc1c44008b4590\",\n  \"name\": {\n    \"en\": \"Reward name\"\n  },\n  \"description\": {\n    \"en\": \"Reward description\"\n  },\n  \"redeem_instructions\": {\n    \"en\": \"Redeem instructions\"\n  },\n  \"terms\": {\n    \"en\": \"Terms & Conditions\"\n  },\n  \"type\": \"coupon\",\n  \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n  \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n  \"message\": \"Message\",\n  \"claim_button_label\": {\n    \"en\": \"Claim\"\n  },\n  \"category\": {\n    \"id\": \"5ef1ad79a44b5e15008b456e\"\n  },\n  \"segments\": [\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    },\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    }\n  ],\n  \"cost\": \"150.5\",\n  \"hide_restricted\": false,\n  \"hidden\": false,\n  \"restricted_message\": {\n    \"en\": \"Message\"\n  },\n  \"repeat_interval\": \"1 week\",\n  \"stock\": 42,\n  \"max_claims\": 90,\n  \"notifications\": false,\n  \"user_notifications\": false,\n  \"status\": \"inactive\",\n  \"price\": {\n    \"EUR\": 500\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "901beaed-a032-42e9-9a8d-4dab18b564fc",
              "name": "Reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique id of the reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d57d4191-e98c-42f9-992d-28ce2ec8efab",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/entities/rewards/reward/:entity_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/entities/rewards/reward/:entity_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/entities/rewards/reward/:entity_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RewardResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44bc1c44008b4590\"},\"name\":{\"title\":\"Name\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward name\"}}},\"description\":{\"title\":\"Description\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward description\"}}},\"redeem_instructions\":{\"title\":\"RedeemInstructions\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Redeem instructions\"}}},\"terms\":{\"title\":\"Terms\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Terms & Conditions\"}}},\"type\":{\"type\":\"string\",\"example\":\"coupon\"},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-07-21T12:00:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-12-21T12:00:00.000Z\"},\"message\":{\"type\":\"string\",\"example\":\"Message\"},\"claim_button_label\":{\"title\":\"ClaimButtonLabel\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Claim\"}}},\"category\":{\"title\":\"Category\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"segments\":{\"type\":\"array\",\"items\":{\"title\":\"Segment\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"description\":\"\"},\"cost\":{\"type\":\"string\",\"example\":\"150.5\"},\"hide_restricted\":{\"type\":\"boolean\",\"example\":false},\"hidden\":{\"type\":\"boolean\",\"example\":false},\"restricted_message\":{\"title\":\"RestrictedMessage\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Message\"}}},\"repeat_interval\":{\"type\":\"string\",\"example\":\"1 week\"},\"stock\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":42},\"max_claims\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":90},\"notifications\":{\"type\":\"boolean\",\"example\":false},\"user_notifications\":{\"type\":\"boolean\",\"example\":false},\"status\":{\"type\":\"string\",\"example\":\"inactive\"},\"price\":{\"title\":\"Price\",\"type\":\"object\",\"properties\":{\"EUR\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":500}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/entities/rewards/reward/:entity_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "bc95138b-2280-4bf5-8965-7706868f8979",
          "name": "Updates a specific reward attributes",
          "request": {
            "name": "Updates a specific reward attributes",
            "description": {
              "content": "An property of a Reward can be updated via this endpoint. The following queries are not an exhaustive list of available options but are merely example values",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                "rewards",
                "reward",
                ":entity_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The unique 24 character alphanumeric identifier of the specific reward",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "entity_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"consectetur_\": \"enim fugiat quis\",\n  \"et35a\": \"sed eiusmod nostrud anim\",\n  \"nulla_cff\": \"culpa\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7a8b64d2-2eba-441e-b4c7-5619165380a7",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique 24 character alphanumeric identifier of the specific reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"consectetur_\": \"enim fugiat quis\",\n  \"et35a\": \"sed eiusmod nostrud anim\",\n  \"nulla_cff\": \"culpa\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"5f05b989a44bc1c44008b4590\",\n  \"name\": {\n    \"en\": \"Reward name\"\n  },\n  \"description\": {\n    \"en\": \"Reward description\"\n  },\n  \"redeem_instructions\": {\n    \"en\": \"Redeem instructions\"\n  },\n  \"terms\": {\n    \"en\": \"Terms & Conditions\"\n  },\n  \"type\": \"coupon\",\n  \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n  \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n  \"message\": \"Message\",\n  \"claim_button_label\": {\n    \"en\": \"Claim\"\n  },\n  \"category\": {\n    \"id\": \"5ef1ad79a44b5e15008b456e\"\n  },\n  \"segments\": [\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    },\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    }\n  ],\n  \"cost\": \"150.5\",\n  \"hide_restricted\": false,\n  \"hidden\": false,\n  \"restricted_message\": {\n    \"en\": \"Message\"\n  },\n  \"repeat_interval\": \"1 week\",\n  \"stock\": 42,\n  \"max_claims\": 90,\n  \"notifications\": false,\n  \"user_notifications\": false,\n  \"status\": \"inactive\",\n  \"price\": {\n    \"EUR\": 500\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0522a8da-2cea-4c96-abe0-d861889090d9",
              "name": "Reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique 24 character alphanumeric identifier of the specific reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"consectetur_\": \"enim fugiat quis\",\n  \"et35a\": \"sed eiusmod nostrud anim\",\n  \"nulla_cff\": \"culpa\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"5f05b989a44bc1c44008b4590\",\n  \"name\": {\n    \"en\": \"Reward name\"\n  },\n  \"description\": {\n    \"en\": \"Reward description\"\n  },\n  \"redeem_instructions\": {\n    \"en\": \"Redeem instructions\"\n  },\n  \"terms\": {\n    \"en\": \"Terms & Conditions\"\n  },\n  \"type\": \"coupon\",\n  \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n  \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n  \"message\": \"Message\",\n  \"claim_button_label\": {\n    \"en\": \"Claim\"\n  },\n  \"category\": {\n    \"id\": \"5ef1ad79a44b5e15008b456e\"\n  },\n  \"segments\": [\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    },\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    }\n  ],\n  \"cost\": \"150.5\",\n  \"hide_restricted\": false,\n  \"hidden\": false,\n  \"restricted_message\": {\n    \"en\": \"Message\"\n  },\n  \"repeat_interval\": \"1 week\",\n  \"stock\": 42,\n  \"max_claims\": 90,\n  \"notifications\": false,\n  \"user_notifications\": false,\n  \"status\": \"inactive\",\n  \"price\": {\n    \"EUR\": 500\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "119617e2-eb9d-4c23-85e1-323151636275",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/entities/rewards/reward/:entity_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/entities/rewards/reward/:entity_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/entities/rewards/reward/:entity_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RewardResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44bc1c44008b4590\"},\"name\":{\"title\":\"Name\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward name\"}}},\"description\":{\"title\":\"Description\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward description\"}}},\"redeem_instructions\":{\"title\":\"RedeemInstructions\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Redeem instructions\"}}},\"terms\":{\"title\":\"Terms\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Terms & Conditions\"}}},\"type\":{\"type\":\"string\",\"example\":\"coupon\"},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-07-21T12:00:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-12-21T12:00:00.000Z\"},\"message\":{\"type\":\"string\",\"example\":\"Message\"},\"claim_button_label\":{\"title\":\"ClaimButtonLabel\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Claim\"}}},\"category\":{\"title\":\"Category\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"segments\":{\"type\":\"array\",\"items\":{\"title\":\"Segment\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"description\":\"\"},\"cost\":{\"type\":\"string\",\"example\":\"150.5\"},\"hide_restricted\":{\"type\":\"boolean\",\"example\":false},\"hidden\":{\"type\":\"boolean\",\"example\":false},\"restricted_message\":{\"title\":\"RestrictedMessage\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Message\"}}},\"repeat_interval\":{\"type\":\"string\",\"example\":\"1 week\"},\"stock\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":42},\"max_claims\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":90},\"notifications\":{\"type\":\"boolean\",\"example\":false},\"user_notifications\":{\"type\":\"boolean\",\"example\":false},\"status\":{\"type\":\"string\",\"example\":\"inactive\"},\"price\":{\"title\":\"Price\",\"type\":\"object\",\"properties\":{\"EUR\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":500}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/entities/rewards/reward/:entity_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bed6813b-3000-4d25-a0ba-f279b01fa5b2",
          "name": "Archives an inactive reward",
          "request": {
            "name": "Archives an inactive reward",
            "description": {
              "content": "Antavo archives data and objects by policy. This endpoint archives a specific reward, making it completely non-visible and inaccessible for customers and Antavo back office users, effectively removing it  from the system. The reward can be restored but only by raising a support ticket with Antavo",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                "rewards",
                "reward",
                ":entity_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The unique id of the reward",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "entity_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b85c26ab-16ea-40be-8617-bb0923f7faaf",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique id of the reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "69fa775d-8450-4937-80b9-24a622b3cc99",
              "name": "Reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    "rewards",
                    "reward",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique id of the reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4a5ffb5-da8d-49de-8b74-e9bbc774e406",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/entities/rewards/reward/:entity_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6ff08617-6307-49cb-b689-fc08d868f9be",
          "name": "Returns customer-specific available rewards",
          "request": {
            "name": "Returns customer-specific available rewards",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "rewards"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Limits the number of rewards returned per page",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "This parameter get a specific page of the reward list if a limit has been set",
                    "type": "text/plain"
                  },
                  "key": "page",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Lower point limit for returned eligible rewards",
                    "type": "text/plain"
                  },
                  "key": "min_price",
                  "value": "42524021.00456792"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Upper point limit for returned eligible rewards",
                    "type": "text/plain"
                  },
                  "key": "max_price",
                  "value": "42524021.00456792"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "An Anatvo-recognized unique customer id  which is used to  determine customer eligibility. A valid attribute will result in the return of possible loyalty/non-loyalty offers. Omitting this attribute results in only non-loyalty offers.",
                    "type": "text/plain"
                  },
                  "key": "customer",
                  "value": "aliquip in adipisicin"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a60f8010-6640-439f-ac58-6bf294e8f42d",
              "name": "Eligible Rewards",
              "originalRequest": {
                "url": {
                  "path": [
                    "rewards"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "min_price",
                      "value": "42524021.00456792"
                    },
                    {
                      "key": "max_price",
                      "value": "42524021.00456792"
                    },
                    {
                      "key": "customer",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e92935ac-843b-4059-b6dc-076c8e781da9",
              "name": "Returned error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "rewards"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "min_price",
                      "value": "42524021.00456792"
                    },
                    {
                      "key": "max_price",
                      "value": "42524021.00456792"
                    },
                    {
                      "key": "customer",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b000d067-bcea-48e3-ab94-d1e1d999911c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/rewards - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/rewards - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"description\":\"List of Offer objects\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Reward ID\",\"example\":\"55e5d4dc2cf1901e688b45d3\"},\"name\":{\"type\":\"string\",\"description\":\"Offer display name\",\"example\":\"A 64GB pendrive with illuminating flashing logo.\"},\"category\":{\"type\":\"string\",\"description\":\"Type of reward, must correlate category set in Backoffice\",\"example\":\"Branded goods.\"},\"price\":{\"type\":\"number\",\"description\":\"Value of reward\",\"example\":100},\"image_url\":{\"type\":\"string\",\"description\":\"Picture of reward\",\"example\":\"https://example.com/image_url.png\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/rewards - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "b58339ed-0b55-4a20-b279-8ad3612072af",
          "name": "Returns information regarding a specific reward",
          "request": {
            "name": "Returns information regarding a specific reward",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "rewards",
                ":reward_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The unique id of the reward",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "reward_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5fc34806-3ba2-44a2-b969-f492ee2ffd60",
              "name": "Reward data JSON object",
              "originalRequest": {
                "url": {
                  "path": [
                    "rewards",
                    ":reward_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique id of the reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1e14c5c0-6ff7-4756-9f0b-995d24d75c38",
              "name": "Returned error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "rewards",
                    ":reward_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique id of the reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bee08f5e-918a-4ec0-8135-ad43c17b934e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/rewards/:reward_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/rewards/:reward_id - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"description\":\"A reward item\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Reward ID\",\"example\":\"55e5d4dc2cf1901e688b45d3\"},\"name\":{\"type\":\"string\",\"description\":\"Offer display name\",\"example\":\"A 64GB pendrive with illuminating flashing logo.\"},\"category\":{\"type\":\"string\",\"description\":\"Type of reward, must correlate with the category set in Backoffice\",\"example\":\"Branded goods.\"},\"price\":{\"type\":\"number\",\"description\":\"Value of reward\",\"example\":100},\"image_url\":{\"type\":\"string\",\"description\":\"Picture of reward\",\"example\":\"https://example.com/image_url.png\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/rewards/:reward_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "badf2d74-222c-42c5-9d5d-35487930e2f6",
          "name": "claiming a specific reward",
          "request": {
            "name": "claiming a specific reward",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "rewards",
                ":reward_id",
                "claim"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The unique id of the reward",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "reward_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customer\": \"laborum aliquip\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "aaaa9e27-a223-4bb0-afda-d0a23749d9bc",
              "name": "Reward data JSON object",
              "originalRequest": {
                "url": {
                  "path": [
                    "rewards",
                    ":reward_id",
                    "claim"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique id of the reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customer\": \"laborum aliquip\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "767889f0-4698-4b6b-9d0a-71f8aae354c1",
              "name": "Missing required parameter - customer",
              "originalRequest": {
                "url": {
                  "path": [
                    "rewards",
                    ":reward_id",
                    "claim"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique id of the reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customer\": \"laborum aliquip\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "ffba8349-12ab-43be-abd6-484fa1b12a69",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "rewards",
                    ":reward_id",
                    "claim"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The unique id of the reward",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "reward_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customer\": \"laborum aliquip\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0fb6947-0c72-4ad5-8f62-518523c5a8e4",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/rewards/:reward_id/claim - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/rewards/:reward_id/claim - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"oneOf\":[{\"type\":\"object\",\"description\":\"A successful reward claim\",\"properties\":{\"spent\":{\"type\":\"number\",\"description\":\"The number of points spent by the customer\",\"example\":100},\"coupon\":{\"type\":\"object\",\"description\":\"The awarded coupon, where appropriate\",\"properties\":{\"code\":{\"type\":\"string\",\"description\":\"Assigned coupon code\",\"example\":\"AH356K1\"},\"type\":{\"type\":\"string\",\"description\":\"Type of assigned coupon\",\"example\":\"percentage\"}}}}},{\"type\":\"object\",\"description\":\"occurred\",\"required\":[\"error\"],\"properties\":{\"error\":{\"type\":\"object\",\"required\":[\"type\",\"code\",\"message\"],\"properties\":{\"code\":{\"type\":\"number\",\"description\":\"A 6-digit number to uniquely identify the place the error occurred\",\"example\":404},\"message\":{\"type\":\"string\",\"description\":\"Wrong endpoint is called, possibly a non-existent reward id\"}}}}}]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/rewards/:reward_id/claim - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "251a1408-dc90-44b7-83b1-998c26877269",
      "name": "Transactions",
      "description": {
        "content": "Endpoints providing customer information regarding specified transaction ids.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d246426f-ca58-4626-9351-4c3ed6322c1f",
          "name": "Return all transaction history for a specific customer",
          "request": {
            "name": "Return all transaction history for a specific customer",
            "description": {
              "content": "This endpoint provides a detailed list of a customer's transactions.  Each returned transaction contains the transaction ID; transaction status and all other related transaction information submitted in the initial event.\n\nThe list of returned transactions  can also be subsequently paginated by limiting the number of returned transactions and subsequently offsetting the returned transactions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "transactions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Limits the number of transactions to be returned in one response. Other values are accessible by pagination made accessible via the offset\nDefault value : 100",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "2326905"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Offsets the starting number of transactions to return. This is used in pagination in conjunction with the limit query. \nDefault value : 0",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "2326905"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "83494e9a-88bd-429e-9d36-d53206f52bc7",
              "name": "Customer transaction history data",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "transactions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "2326905"
                    },
                    {
                      "key": "offset",
                      "value": "2326905"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"10000024\",\n      \"status\": \"refunded\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    },\n    {\n      \"id\": \"10000024\",\n      \"status\": \"rejected\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "970c06f7-ccd8-451a-b841-6012bf8be6d5",
              "name": "Customer not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "transactions"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "2326905"
                    },
                    {
                      "key": "offset",
                      "value": "2326905"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7697b6b2-78a2-4279-98d6-285687fad660",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/transactions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/transactions - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/transactions - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"TransactionHistoryResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"Transaction\",\"required\":[\"id\",\"status\",\"event\",\"created_at\",\"updated_at\",\"total\",\"items\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Transaction ID\",\"example\":\"10000024\"},\"status\":{\"title\":\"Status8\",\"enum\":[\"accepted\",\"pending\",\"rejected\",\"refunded\"],\"type\":\"string\"},\"event\":{\"type\":\"string\",\"description\":\"Event reference ID\",\"example\":\"5e7a80e264f2c53cac000005\"},\"created_at\":{\"type\":\"string\",\"description\":\"Timestamp of creation of the transaction\",\"format\":\"date-time\",\"example\":\"2020-04-01T10:41:10.000Z\"},\"updated_at\":{\"type\":\"string\",\"description\":\"Timestamp of last update of the transaction\",\"format\":\"date-time\",\"example\":\"2020-06-01T10:41:10.000Z\"},\"total\":{\"type\":\"number\",\"description\":\"Total value of the transaction\",\"example\":99.9},\"items\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"product_id\":{\"type\":\"string\",\"description\":\"Product ID\",\"example\":\"ABC-DEF-GHI\"},\"quantity\":{\"type\":\"number\",\"description\":\"Number of items purchased\",\"example\":3},\"subtotal\":{\"type\":\"number\",\"description\":\"Amount actually paginated\",\"example\":99.9}}},\"description\":\"Contain all properties from checkout item\"},\"earned\":{\"type\":\"number\",\"description\":\"Number of points earned\",\"example\":99},\"burned\":{\"type\":\"number\",\"description\":\"Number of points burned\",\"example\":12},\"bonus\":{\"type\":\"number\",\"description\":\"Total number of associated campaign bonus points\",\"example\":23}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/transactions - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "654a6c77-b407-417f-9d58-c6ebe0d82707",
          "name": "Returns a specified transaction for a specific customer",
          "request": {
            "name": "Returns a specified transaction for a specific customer",
            "description": {
              "content": "This endpoint provides a detailed breakdown of a specified customer's transaction.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "transactions",
                ":transaction_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique transaction ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "transaction_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9728f9c5-d146-402f-b237-c1a55d04cb32",
              "name": "The transaction history data for a specific transaction",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "transactions",
                    ":transaction_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique transaction ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "transaction_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"10000024\",\n      \"status\": \"rejected\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    },\n    {\n      \"id\": \"10000024\",\n      \"status\": \"pending\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0976a990-1e43-4a2e-b62e-9eefa1465e5a",
              "name": "Customer not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "transactions",
                    ":transaction_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique transaction ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "transaction_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"NotFoundException\",\n  \"code\": 160212,\n  \"message\": \"Customer not found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "43461c31-5577-463a-aaf8-92b61a8f104d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/transactions/:transaction_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/transactions/:transaction_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/transactions/:transaction_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"TransactionHistoryResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"Transaction\",\"required\":[\"id\",\"status\",\"event\",\"created_at\",\"updated_at\",\"total\",\"items\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Transaction ID\",\"example\":\"10000024\"},\"status\":{\"title\":\"Status8\",\"enum\":[\"accepted\",\"pending\",\"rejected\",\"refunded\"],\"type\":\"string\"},\"event\":{\"type\":\"string\",\"description\":\"Event reference ID\",\"example\":\"5e7a80e264f2c53cac000005\"},\"created_at\":{\"type\":\"string\",\"description\":\"Timestamp of creation of the transaction\",\"format\":\"date-time\",\"example\":\"2020-04-01T10:41:10.000Z\"},\"updated_at\":{\"type\":\"string\",\"description\":\"Timestamp of last update of the transaction\",\"format\":\"date-time\",\"example\":\"2020-06-01T10:41:10.000Z\"},\"total\":{\"type\":\"number\",\"description\":\"Total value of the transaction\",\"example\":99.9},\"items\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"product_id\":{\"type\":\"string\",\"description\":\"Product ID\",\"example\":\"ABC-DEF-GHI\"},\"quantity\":{\"type\":\"number\",\"description\":\"Number of items purchased\",\"example\":3},\"subtotal\":{\"type\":\"number\",\"description\":\"Amount actually paginated\",\"example\":99.9}}},\"description\":\"Contain all properties from checkout item\"},\"earned\":{\"type\":\"number\",\"description\":\"Number of points earned\",\"example\":99},\"burned\":{\"type\":\"number\",\"description\":\"Number of points burned\",\"example\":12},\"bonus\":{\"type\":\"number\",\"description\":\"Total number of associated campaign bonus points\",\"example\":23}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/transactions/:transaction_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ca2d7ee3-5892-4b35-ba98-7e8c0651c43d",
          "name": "Returns the all events associated with a specified transaction for a specific customer",
          "request": {
            "name": "Returns the all events associated with a specified transaction for a specific customer",
            "description": {
              "content": "This endpoint provides a detailed breakdown of a specified customer's transaction.\nThe following events are included in this end points:\n* [checkout](/api/events.html#checkout), [checkout_item](/api/events.html#checkout-item).\n* [checkout_update](/api/events.html#checkout-update), [checkout_update_item](/api/events.html#checkout-update-item)\n* [checkout_accept](/api/events.html#checkout-accept), [checkout_reject](/api/events.html#checkout-reject).\n* [refund](/api/events.html#refund), [partial_refund](/api/events.html#partial-refund), [refund_item](/api/events.html#refund-item)\n* any event with a transaction ID ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "transactions",
                ":transaction_id",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "The Events history can be filtered by submitted event actions. Built-in actions are listed here [here](/api/events.html#event-actions).\n\nThis filter query can be used in conjunction with the operators listed [here](/api/filter.html#query-generation) and the filter should be submitted as qu in the following format\n\n<code> field.operator(optional)=value</code>\n\nFiltering of events containing a TranasactionID id is also possible. This requires the action query to contain all related events and for an additional query using <code>properties.transaction_id</code>. \n\n<code> action.in=checkout,checkout_accept&properties.transaction_id.in=c078c162-88af-4369-89a4-408958a8cb75 </code>.\n\nThese combined filters can also use filtering [operators](/api/filter.html#query-generation). The transaction_id field in any custom event must be set as filterable. ",
                    "type": "text/plain"
                  },
                  "key": "action",
                  "value": ""
                },
                {
                  "description": {
                    "content": "The Events history can be filtered by a specific date. Specific start and/or end dates can be stated by using multiple [operators](/api/filter.html#query-generation) e.g.\n\n<code>date.gt=2020-01-01&date.lt=2022-02-01</code>\n\nBrand timezone should be considered when sending the request ",
                    "type": "text/plain"
                  },
                  "key": "date",
                  "value": ""
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique transaction ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "transaction_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4c24e3ef-9c5a-4e9c-8c27-2013f12ee47e",
              "name": "The transaction history data for a specific transaction",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "transactions",
                    ":transaction_id",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": ""
                    },
                    {
                      "key": "date",
                      "value": ""
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique transaction ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "transaction_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"10000024\",\n      \"status\": \"rejected\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    },\n    {\n      \"id\": \"10000024\",\n      \"status\": \"pending\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cad8e692-effc-44f1-9b2b-46a87a0426dd",
              "name": "Customer not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "transactions",
                    ":transaction_id",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": ""
                    },
                    {
                      "key": "date",
                      "value": ""
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique transaction ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "transaction_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"NotFoundException\",\n  \"code\": 160212,\n  \"message\": \"Customer not found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b183d3f6-cd55-4461-bd25-d8d54ef6b6dc",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/transactions/:transaction_id/events - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/transactions/:transaction_id/events - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/transactions/:transaction_id/events - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"TransactionHistoryResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"Transaction\",\"required\":[\"id\",\"status\",\"event\",\"created_at\",\"updated_at\",\"total\",\"items\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Transaction ID\",\"example\":\"10000024\"},\"status\":{\"title\":\"Status8\",\"enum\":[\"accepted\",\"pending\",\"rejected\",\"refunded\"],\"type\":\"string\"},\"event\":{\"type\":\"string\",\"description\":\"Event reference ID\",\"example\":\"5e7a80e264f2c53cac000005\"},\"created_at\":{\"type\":\"string\",\"description\":\"Timestamp of creation of the transaction\",\"format\":\"date-time\",\"example\":\"2020-04-01T10:41:10.000Z\"},\"updated_at\":{\"type\":\"string\",\"description\":\"Timestamp of last update of the transaction\",\"format\":\"date-time\",\"example\":\"2020-06-01T10:41:10.000Z\"},\"total\":{\"type\":\"number\",\"description\":\"Total value of the transaction\",\"example\":99.9},\"items\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"product_id\":{\"type\":\"string\",\"description\":\"Product ID\",\"example\":\"ABC-DEF-GHI\"},\"quantity\":{\"type\":\"number\",\"description\":\"Number of items purchased\",\"example\":3},\"subtotal\":{\"type\":\"number\",\"description\":\"Amount actually paginated\",\"example\":99.9}}},\"description\":\"Contain all properties from checkout item\"},\"earned\":{\"type\":\"number\",\"description\":\"Number of points earned\",\"example\":99},\"burned\":{\"type\":\"number\",\"description\":\"Number of points burned\",\"example\":12},\"bonus\":{\"type\":\"number\",\"description\":\"Total number of associated campaign bonus points\",\"example\":23}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/transactions/:transaction_id/events - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "714292de-091f-429a-adf3-6b73f57a0ee0",
          "name": "Performs transactional-based searches for a specific customer",
          "request": {
            "name": "Performs transactional-based searches for a specific customer",
            "description": {
              "content": "This endpoint provides transactional-based searches for a specific customer. Customer transactions can be filtered by transaction id and status and highly selective queries can be generated using the generic entity filtering described [here](/api/filter.html#filtering), e.g.,\n\n`GET /customers/001/transactions/-/search?id.in=trx01,trx02,trx03&status=pending`\n\nAll inline examples within this documentation uses simple matching.\n\nThis endpoint has a 8k request URI limit, this corresponds to approximately 5000 transactional ID which are less than 15 character in length. Higher volumes of filtering are possible using the [POST Method](#/History/SearchTransactionHistorypost). ",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "transactions",
                "-",
                "search"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "the target transaction id for the specified customer.  This example uses a simple match but complex filtering is possible using  generic entity filter parameters - [Filtering](/api/filter.html#filtering).",
                    "type": "text/plain"
                  },
                  "key": "id",
                  "value": "aliquip in adipisicin"
                },
                {
                  "description": {
                    "content": "Transactions can be filtered by status.              schema: This example uses a simple match but complex filtering is possible using  generic entity filter parameters - [Filtering](/api/filter.html#filtering). (This can only be one of accepted,pending,refunded,rejected)",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": ""
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Limits the number of transactions to be returned in one response. Other values are accessible by pagination made accessible via the offset. Default value : 100",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "2326905"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Offsets the starting number of transactions to return. This is used in pagination in conjunction with the limit query. \nDefault value : 0",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "2326905"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e4ad8c65-ad0b-4aa0-826a-4cf86b7ad807",
              "name": "The transaction history data for a specific transaction",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "transactions",
                    "-",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "aliquip in adipisicin"
                    },
                    {
                      "key": "status",
                      "value": ""
                    },
                    {
                      "key": "limit",
                      "value": "2326905"
                    },
                    {
                      "key": "offset",
                      "value": "2326905"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"10000024\",\n      \"status\": \"rejected\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    },\n    {\n      \"id\": \"10000024\",\n      \"status\": \"pending\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "964265aa-6843-4ccf-b4fd-221e0f240767",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/transactions/-/search - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/transactions/-/search - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/transactions/-/search - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"TransactionHistoryResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"Transaction\",\"required\":[\"id\",\"status\",\"event\",\"created_at\",\"updated_at\",\"total\",\"items\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Transaction ID\",\"example\":\"10000024\"},\"status\":{\"title\":\"Status8\",\"enum\":[\"accepted\",\"pending\",\"rejected\",\"refunded\"],\"type\":\"string\"},\"event\":{\"type\":\"string\",\"description\":\"Event reference ID\",\"example\":\"5e7a80e264f2c53cac000005\"},\"created_at\":{\"type\":\"string\",\"description\":\"Timestamp of creation of the transaction\",\"format\":\"date-time\",\"example\":\"2020-04-01T10:41:10.000Z\"},\"updated_at\":{\"type\":\"string\",\"description\":\"Timestamp of last update of the transaction\",\"format\":\"date-time\",\"example\":\"2020-06-01T10:41:10.000Z\"},\"total\":{\"type\":\"number\",\"description\":\"Total value of the transaction\",\"example\":99.9},\"items\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"product_id\":{\"type\":\"string\",\"description\":\"Product ID\",\"example\":\"ABC-DEF-GHI\"},\"quantity\":{\"type\":\"number\",\"description\":\"Number of items purchased\",\"example\":3},\"subtotal\":{\"type\":\"number\",\"description\":\"Amount actually paginated\",\"example\":99.9}}},\"description\":\"Contain all properties from checkout item\"},\"earned\":{\"type\":\"number\",\"description\":\"Number of points earned\",\"example\":99},\"burned\":{\"type\":\"number\",\"description\":\"Number of points burned\",\"example\":12},\"bonus\":{\"type\":\"number\",\"description\":\"Total number of associated campaign bonus points\",\"example\":23}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/transactions/-/search - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ecec12ec-f709-4f8a-af13-733ed1783e75",
          "name": "A high-volume bulk transactional-based search for a specific customer",
          "request": {
            "name": "A high-volume bulk transactional-based search for a specific customer",
            "description": {
              "content": "This endpoint provides high-volume transactional-based searches for a specific customer.\n\nCustomer transactions can be filtered by transaction id and status provide in the request body. Highly selective queries can be generated using the generic entity filtering described [here](/api/filter.html#filtering).\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "transactions",
                "-",
                "search"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id.in\": [\n    \"trx01\",\n    \"trx02\",\n    \"trx03\"\n  ],\n  \"status\": \"pending\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f60daf69-896c-42ec-9499-537525d4b613",
              "name": "The transaction history data for a specific transaction",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "transactions",
                    "-",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id.in\": [\n    \"trx01\",\n    \"trx02\",\n    \"trx03\"\n  ],\n  \"status\": \"pending\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"10000024\",\n      \"status\": \"rejected\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    },\n    {\n      \"id\": \"10000024\",\n      \"status\": \"pending\",\n      \"event\": \"5e7a80e264f2c53cac000005\",\n      \"created_at\": \"2020-04-01T10:41:10.000Z\",\n      \"updated_at\": \"2020-06-01T10:41:10.000Z\",\n      \"total\": 99.9,\n      \"items\": [\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        },\n        {\n          \"product_id\": \"ABC-DEF-GHI\",\n          \"quantity\": 3,\n          \"subtotal\": 99.9\n        }\n      ],\n      \"earned\": 99,\n      \"burned\": 12,\n      \"bonus\": 23\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6a758f87-1dc1-42c0-a79f-1c3621328a1d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/transactions/-/search - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/customers/:customer_id/transactions/-/search - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/customers/:customer_id/transactions/-/search - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"TransactionHistoryResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"Transaction\",\"required\":[\"id\",\"status\",\"event\",\"created_at\",\"updated_at\",\"total\",\"items\"],\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Transaction ID\",\"example\":\"10000024\"},\"status\":{\"title\":\"Status8\",\"enum\":[\"accepted\",\"pending\",\"rejected\",\"refunded\"],\"type\":\"string\"},\"event\":{\"type\":\"string\",\"description\":\"Event reference ID\",\"example\":\"5e7a80e264f2c53cac000005\"},\"created_at\":{\"type\":\"string\",\"description\":\"Timestamp of creation of the transaction\",\"format\":\"date-time\",\"example\":\"2020-04-01T10:41:10.000Z\"},\"updated_at\":{\"type\":\"string\",\"description\":\"Timestamp of last update of the transaction\",\"format\":\"date-time\",\"example\":\"2020-06-01T10:41:10.000Z\"},\"total\":{\"type\":\"number\",\"description\":\"Total value of the transaction\",\"example\":99.9},\"items\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"product_id\":{\"type\":\"string\",\"description\":\"Product ID\",\"example\":\"ABC-DEF-GHI\"},\"quantity\":{\"type\":\"number\",\"description\":\"Number of items purchased\",\"example\":3},\"subtotal\":{\"type\":\"number\",\"description\":\"Amount actually paginated\",\"example\":99.9}}},\"description\":\"Contain all properties from checkout item\"},\"earned\":{\"type\":\"number\",\"description\":\"Number of points earned\",\"example\":99},\"burned\":{\"type\":\"number\",\"description\":\"Number of points burned\",\"example\":12},\"bonus\":{\"type\":\"number\",\"description\":\"Total number of associated campaign bonus points\",\"example\":23}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/customers/:customer_id/transactions/-/search - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b76e9dee-2177-4a61-9658-f8e3e3c87307",
      "name": "Treasure Hunt",
      "description": {
        "content": "Endpoints provided by _Treasure Hunt_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8c94dd08-6b4e-4ab9-9c70-fe43b5e4e9fb",
          "name": "Get treasure cards",
          "request": {
            "name": "Get treasure cards",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "activities",
                "treasure-hunt"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique customer identifier",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fd348899-854b-4367-8a23-bc9a8a2b3c03",
              "name": "available treasure cards",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "activities",
                    "treasure-hunt"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) unique customer identifier",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"type\": \"treasure\",\n      \"status\": \"active\",\n      \"title\": \"Example Treasure\",\n      \"description\": \"Example treasure description\",\n      \"image_url\": \"https://example.com/image.png\",\n      \"points\": 50\n    },\n    {\n      \"type\": \"treasure\",\n      \"status\": \"active\",\n      \"title\": \"Example Treasure\",\n      \"description\": \"Example treasure description\",\n      \"image_url\": \"https://example.com/image.png\",\n      \"points\": 50\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d723677-9b44-4105-820d-1ccb1048428b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/activities/treasure-hunt - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/activities/treasure-hunt - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/activities/treasure-hunt - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"example\":\"treasure\"},\"status\":{\"type\":\"string\",\"example\":\"active\"},\"title\":{\"type\":\"string\",\"example\":\"Example Treasure\"},\"description\":{\"type\":\"string\",\"example\":\"Example treasure description\"},\"image_url\":{\"type\":\"string\",\"example\":\"https://example.com/image.png\"},\"points\":{\"type\":\"integer\",\"format\":\"int64\",\"example\":50}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/activities/treasure-hunt - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "c7d550e9-5e49-435b-9d4e-39da6af56ede",
      "name": "Wallet",
      "description": {
        "content": "Endpoints provided by the _Wallet_ module",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "47a35d69-78ff-4c4c-9c94-0acd2c180229",
          "name": "Customer Wallet",
          "request": {
            "name": "Customer Wallet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "wallet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Filters all available passes based upon status. Accepted values: assigned and archived",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "assigned"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "724187a4-d046-488a-a327-1206c90a69e6",
              "name": "Customer Wallet entries",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "wallet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "assigned"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"name\": \"Gold Membership\",\n      \"id\": \"5eba66a6a44b5e14008b483f\",\n      \"created_at\": \"1992-05-05T01:59:52.111Z\",\n      \"status\": \"active\",\n      \"type\": \"membership\",\n      \"expires_at\": \"2021-11-02T00:00:00.000Z\",\n      \"coupon\": \"ABC123\",\n      \"_actions\": {\n        \"download_apple\": {\n          \"method\": \"GET\",\n          \"url\": \"/customers/c987654/wallet/5ec6594c127abc14008b4626/download/apple\"\n        },\n        \"download_google\": {\n          \"method\": \"GET\",\n          \"url\": \"/customers/c987654/wallet/5ec6594c127abc14008b4626/download/google\"\n        }\n      }\n    },\n    {\n      \"name\": \"Gold Membership\",\n      \"id\": \"5eba66a6a44b5e14008b483f\",\n      \"created_at\": \"1943-09-05T12:32:59.259Z\",\n      \"status\": \"active\",\n      \"type\": \"membership\",\n      \"expires_at\": \"2021-11-02T00:00:00.000Z\",\n      \"coupon\": \"ABC123\",\n      \"_actions\": {\n        \"download_apple\": {\n          \"method\": \"GET\",\n          \"url\": \"/customers/c987654/wallet/5ec6594c127abc14008b4626/download/apple\"\n        },\n        \"download_google\": {\n          \"method\": \"GET\",\n          \"url\": \"/customers/c987654/wallet/5ec6594c127abc14008b4626/download/google\"\n        }\n      }\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b81aef21-44e8-40e9-8cfd-b6595c604034",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id/wallet - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id/wallet - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/customers/:customer_id/wallet - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"description\":\"A pass assigned to a Customer\",\"required\":[\"name\",\"id\",\"created_at\",\"status\",\"type\",\"expires_at\",\"coupon\",\"_actions\"],\"properties\":{\"name\":{\"type\":\"string\",\"example\":\"Gold Membership\"},\"id\":{\"type\":\"string\",\"example\":\"5eba66a6a44b5e14008b483f\"},\"created_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Assignment date-time of the pass\"},\"status\":{\"type\":\"string\",\"enum\":[\"assigned\",\"active\",\"expired\",\"revoked\"],\"example\":\"active\"},\"type\":{\"type\":\"string\",\"enum\":[\"coupon\",\"membership\",\"event\"],\"example\":\"membership\"},\"expires_at\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Pass expiration time, if it has one\",\"example\":\"2021-11-02T00:00:00.000Z\"},\"coupon\":{\"type\":\"string\",\"description\":\"Coupon code associated with the pass, if there is one\",\"example\":\"ABC123\"},\"_actions\":{\"type\":\"object\",\"description\":\"Defines actions for the resource\",\"properties\":{\"download_apple\":{\"type\":\"object\",\"description\":\"Download endpoint for Apple Pass, only if it is enabled\",\"required\":[\"method\",\"url\"],\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"GET\"},\"url\":{\"type\":\"string\",\"example\":\"/customers/c987654/wallet/5ec6594c127abc14008b4626/download/apple\"}}},\"download_google\":{\"type\":\"object\",\"description\":\"Download endpoint for Google Wallet, only if it is enabled\",\"required\":[\"method\",\"url\"],\"properties\":{\"method\":{\"type\":\"string\",\"example\":\"GET\"},\"url\":{\"type\":\"string\",\"example\":\"/customers/c987654/wallet/5ec6594c127abc14008b4626/download/google\"}}}}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id/wallet - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "0187ec6e-c715-4bc8-84b5-5519df6ffcdb",
      "name": "Customers",
      "description": {
        "content": "Core features related to customer accounts",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2dd4df3a-1679-45a6-90e8-2056dc6a5365",
          "name": "Search Antavo using customer information",
          "request": {
            "name": "Search Antavo using customer information",
            "description": {
              "content": " This endpoint searches the Antavo database for customers matching the following search criteria and returns the Antavo Customer ID. \n\nThe filtering query requires that the filter parameter has been marked as either ``searchable`` or ``filterable`` in the Antavo Backoffice platform, under Settings / Customers / Fields. This filtering is case-sensitive and does not return partial matches.\n\nThis configuration is not needed for the older more restrictive search query\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Customers can be filtered upon any configured customer field. The returned results are case-sensitive and only return a complete match.",
                    "type": "text/plain"
                  },
                  "key": "first_name",
                  "value": "John"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Legacy key-field search. Current search fields: first_name, last_name, (full) name, email address, phone or membership_id",
                    "type": "text/plain"
                  },
                  "key": "search",
                  "value": "Smith"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "Specify whether the legacy key-field search should be partial (default) or an exact (full) match",
                    "type": "text/plain"
                  },
                  "key": "match",
                  "value": "full"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a76fe2fe-8270-4822-b9fc-5176e8bce248",
              "name": "Successful customer search",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "first_name",
                      "value": "John"
                    },
                    {
                      "key": "search",
                      "value": "Smith"
                    },
                    {
                      "key": "match",
                      "value": "full"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "8094a306-6c78-4cf1-805e-0b5dc4262066",
              "name": "Returned error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "first_name",
                      "value": "John"
                    },
                    {
                      "key": "search",
                      "value": "Smith"
                    },
                    {
                      "key": "match",
                      "value": "full"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "99869ca5-2bdb-40e0-84f2-5db70e617a4f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Returns Customer unique id which match the search criteria\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The unique customer identifier\",\"example\":\"55e5d4dc2cf1901e688b45d3\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "a2af4a21-cacc-487d-b170-5bfe830b6527",
          "name": "Returns detailed customer data using the Antavo unique ID",
          "request": {
            "name": "Returns detailed customer data using the Antavo unique ID",
            "description": {
              "content": " This API returns the detailed customer information\nA full description of the structure, available options, configurations and returned data can be found [here](/docs/intro/customer.html#customer-object)\nThis endpoint only works with api_key authentication on the rc environment.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Returns additional optional fields: Currently purchases module and points expiration",
                    "type": "text/plain"
                  },
                  "key": "fields",
                  "value": "purchases.ytd,expiring_points"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "ABCabc123",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "235039b0-bdc4-4980-a256-e31f4925838b",
              "name": "Successful customer search",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "fields",
                      "value": "purchases.ytd,expiring_points"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "ABCabc123",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ac04ec18-66f4-4c79-b253-71ebe7176639",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/:customer_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/:customer_id - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Detailed customer information for a given Customer unique id\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The unique identifier\",\"example\":\"55e5d4dc2cf1901e688b45d3\"},\"first_name\":{\"type\":\"string\",\"description\":\"Customer's first name\",\"example\":\"John\"},\"last_name\":{\"type\":\"string\",\"description\":\"Customer's Surname name\",\"example\":\"Smith.\"},\"nickname\":{\"type\":\"string\",\"description\":\"Nickname/\",\"example\":\"Johnny\"},\"email\":{\"type\":\"string\",\"description\":\"Customer's email address\",\"example\":\"Jsmith@example.com\"},\"birth_date\":{\"type\":\"string\",\"pattern\":\"/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/\",\"description\":\"Customer's date of birth\",\"format\":\"date\",\"example\":\"1969-12-25\"},\"gender\":{\"type\":\"string\",\"description\":\"Customer language code (ISO-639-1 format)\",\"example\":\"Male\"},\"language\":{\"type\":\"string\",\"description\":\"Customer's gender\",\"example\":\"en\"},\"currency\":{\"type\":\"string\",\"description\":\"Last currency used\",\"example\":\"GBP\"},\"status\":{\"description\":\"The status of the customer Read more (link to lifecycle)\",\"type\":\"string\",\"example\":\"Active\"},\"score\":{\"description\":\"The total number of points ever earned by the customer.\",\"type\":\"number\",\"example\":100},\"spent\":{\"description\":\"The points spent by the customer\",\"type\":\"number\",\"example\":20},\"reserved\":{\"description\":\"The amount of points reserved on bids or discounts\",\"type\":\"number\",\"example\":0},\"spendable\":{\"description\":\"The amount of points currently spendable\",\"type\":\"number\",\"example\":50},\"pending\":{\"description\":\"The number of pending points for non-finalized actions .Typically given when the purchase is in its refund/return period.\",\"type\":\"number\",\"example\":20},\"autologin_token\":{\"description\":\"A token that can be used to forward the customer to pages of the loyalty Hub\",\"type\":\"string\"},\"image_url\":{\"description\":\"The URL of the customer profile picture, if it’s available\",\"type\":\"string\"},\"optin_at\":{\"description\":\"The Unix timestamp of the enrollment of the customer\",\"type\":\"number\",\"example\":1577836800},\"last_login_at\":{\"description\":\"The Unix timestamp of the last login of the customer\",\"type\":\"number\",\"example\":1593561600},\"updated_at\":{\"description\":\"The Unix timestamp of the last time customer data was updated\",\"type\":\"number\",\"example\":1593561623},\"properties\":{\"description\":\"Custom properties you track about the customer. Data returned in this object depends on profiling questions or custom data recorded by custom events. (Requires Profiling, Custom Events or Automation modules to be enabled)\",\"type\":\"object\"},\"purchase_total\":{\"description\":\"The amount spent on purchases by the customer since enrolling into the program\",\"type\":\"number\",\"example\":100},\"purchase_count\":{\"description\":\"The number of purchases made by the customer since enrolling into the program.\",\"type\":\"number\",\"example\":2},\"purchase_last_date\":{\"type\":\"string\",\"description\":\"Last time the customer made a purchase since enrolling into the program\",\"format\":\"date\",\"pattern\":\"/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/\",\"example\":\"2020-10-01\"},\"accounts\":{\"type\":\"object\",\"description\":\"All multi-account information is held within this object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The unique identifier for the account\",\"example\":\"55e5d4dc2cf1901e688b45d3\"},\"name\":{\"type\":\"string\",\"description\":\"The Account label\",\"example\":\"Test1\"},\"earned\":{\"type\":\"numeric\",\"description\":\"The total numbers of points earned in this account.\",\"example\":12705},\"spent\":{\"type\":\"numeric\",\"description\":\"The total number of points spent in this account.\",\"example\":1056},\"pending\":{\"type\":\"numeric\",\"description\":\"The total number of pending points in this account.\",\"example\":0},\"reserved\":{\"type\":\"numeric\",\"description\":\"The total number of reserved points in this account.\",\"example\":0},\"expired\":{\"type\":\"numeric\",\"description\":\"The total number of expired points in this account.\",\"example\":0},\"spendable\":{\"type\":\"numeric\",\"description\":\"The total number of spendable  points in this account.\",\"example\":11649},\"burn_rates\":{\"type\":\"object\",\"description\":\"The currency dependent burn rates set in the Backoffice\",\"properties\":{\"amount\":{\"type\":\"numeric\",\"description\":\"The value of the points\",\"example\":100},\"points\":{\"type\":\"numeric\",\"description\":\"The number of points to be burnt\",\"example\":200},\"currency\":{\"type\":\"string\",\"description\":\"The selected currency\",\"example\":\"GBP\"}}}}},\"tiers\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The unique identifier of the current tier in Antavo LMP\",\"example\":\"T0\"},\"name\":{\"type\":\"string\",\"description\":\"The tier label\",\"example\":\"T0\"},\"since\":{\"type\":\"datetime\",\"description\":\"The time at which the member joined this tier\",\"example\":\"2022-05-02T12:57:41+02:00\"},\"threshold\":{\"type\":\"numeric\",\"description\":\"The point threshold for joining this tier\",\"example\":100},\"expdate\":{\"type\":\"string\",\"description\":\"The date when the tier expires and the customers' tier is recalculated.\",\"example\":\"2023-01-11T00:00:00+01:00\"},\"points\":{\"type\":\"numeric\",\"description\":\"The number of tier-status points the customer has earned. These may not be the same as the customer's earned points\",\"example\":100},\"structure\":{\"type\":\"object\",\"description\":\"The overall structure in which the current tier is located.\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The unique identifier of the current tier structure in Antavo LMP\",\"example\":\"general\"},\"name\":{\"type\":\"string\",\"description\":\"The tier structure label\",\"example\":\"General spending\"}}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/:customer_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ad1013d2-3826-414b-a720-341723e14b0f",
          "name": "Merges the current customer into the target account",
          "request": {
            "name": "Merges the current customer into the target account",
            "description": {
              "content": "This permanently merges the current customer into the target account.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                ":customer_id",
                "merge"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Unique customer ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "customer_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The target account into which the current customer will be merged.",
                    "type": "text/plain"
                  },
                  "key": "target",
                  "value": "abc123"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "3d9dbf8a-d780-4e7b-8e40-2f5e38bfd791",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "merge"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The target account into which the current customer will be merged.",
                        "type": "text/plain"
                      },
                      "key": "target",
                      "value": "abc123"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6185058f-8137-48b2-a845-91c7a6160ed7",
              "name": "Bad request",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    ":customer_id",
                    "merge"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) Unique customer ID",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "customer_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The target account into which the current customer will be merged.",
                        "type": "text/plain"
                      },
                      "key": "target",
                      "value": "abc123"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"BadRequestException\",\n  \"code\": 160216,\n  \"message\": \"Customer is not active\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "886e2a66-5f65-451f-907b-19690772f9ba",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/customers/:customer_id/merge - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a2f1d1a5-c94d-451c-90cc-532c6bd17c83",
          "name": "Returns the number of active customer within the Antavo Loyalty Management Platform",
          "request": {
            "name": "Returns the number of active customer within the Antavo Loyalty Management Platform",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                "-",
                "count"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2bb8c31b-0992-4e24-ab8a-fceae438a53c",
              "name": "Successful customer search",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "-",
                    "count"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44192920-61ab-4b1a-876e-4d9332b0a12f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/-/count - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/-/count - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Number of customers\",\"properties\":{\"active\":{\"type\":\"number\",\"description\":\"The number of active customers\",\"example\":123456}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/-/count - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "dc505b1b-2c2b-4641-bfd5-e43bfd95076e",
      "name": "Generic",
      "description": {
        "content": "A general method for accessing and modifying a custom entity",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b5b77146-a98f-46a0-8f81-eb85bc90acc4",
          "name": "Returns all available entities within the specified entity collection.",
          "request": {
            "name": "Returns all available entities within the specified entity collection.",
            "description": {
              "content": "This endpoints lists all available entities within the specified entity collection. This interaction is customer-independent",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                ":collection",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "amet3",
                  "value": "nisi quis veniam"
                },
                {
                  "disabled": false,
                  "key": "consequat2",
                  "value": "ex veniam "
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The entities' collection name e.g., rewards, customers",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "collection"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "entity"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c498b767-61b2-4d1b-8085-df026209c8b4",
              "name": "List of all entities",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "amet3",
                      "value": "nisi quis veniam"
                    },
                    {
                      "key": "consequat2",
                      "value": "ex veniam "
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"5f05b989a44bc1c44008b4590\",\n      \"name\": {\n        \"en\": \"Reward name\"\n      },\n      \"description\": {\n        \"en\": \"Reward description\"\n      },\n      \"redeem_instructions\": {\n        \"en\": \"Redeem instructions\"\n      },\n      \"terms\": {\n        \"en\": \"Terms & Conditions\"\n      },\n      \"type\": \"coupon\",\n      \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n      \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n      \"message\": \"Message\",\n      \"claim_button_label\": {\n        \"en\": \"Claim\"\n      },\n      \"category\": {\n        \"id\": \"5ef1ad79a44b5e15008b456e\"\n      },\n      \"segments\": [\n        {\n          \"id\": \"5ef1ad79a44b5e15008b456e\"\n        },\n        {\n          \"id\": \"5ef1ad79a44b5e15008b456e\"\n        }\n      ],\n      \"cost\": \"150.5\",\n      \"hide_restricted\": false,\n      \"hidden\": false,\n      \"restricted_message\": {\n        \"en\": \"Message\"\n      },\n      \"repeat_interval\": \"1 week\",\n      \"stock\": 42,\n      \"max_claims\": 90,\n      \"notifications\": false,\n      \"user_notifications\": false,\n      \"status\": \"inactive\",\n      \"price\": {\n        \"EUR\": 500\n      }\n    },\n    {\n      \"id\": \"5f05b989a44bc1c44008b4590\",\n      \"name\": {\n        \"en\": \"Reward name\"\n      },\n      \"description\": {\n        \"en\": \"Reward description\"\n      },\n      \"redeem_instructions\": {\n        \"en\": \"Redeem instructions\"\n      },\n      \"terms\": {\n        \"en\": \"Terms & Conditions\"\n      },\n      \"type\": \"coupon\",\n      \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n      \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n      \"message\": \"Message\",\n      \"claim_button_label\": {\n        \"en\": \"Claim\"\n      },\n      \"category\": {\n        \"id\": \"5ef1ad79a44b5e15008b456e\"\n      },\n      \"segments\": [\n        {\n          \"id\": \"5ef1ad79a44b5e15008b456e\"\n        },\n        {\n          \"id\": \"5ef1ad79a44b5e15008b456e\"\n        }\n      ],\n      \"cost\": \"150.5\",\n      \"hide_restricted\": false,\n      \"hidden\": false,\n      \"restricted_message\": {\n        \"en\": \"Message\"\n      },\n      \"repeat_interval\": \"1 week\",\n      \"stock\": 42,\n      \"max_claims\": 90,\n      \"notifications\": false,\n      \"user_notifications\": false,\n      \"status\": \"inactive\",\n      \"price\": {\n        \"EUR\": 500\n      }\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "095745b3-3419-40d9-9210-25ce2bd61cdb",
              "name": "Reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "amet3",
                      "value": "nisi quis veniam"
                    },
                    {
                      "key": "consequat2",
                      "value": "ex veniam "
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9ae4428d-c26d-4bb0-a397-42967cc655fd",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/entities/:collection/:entity - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/entities/:collection/:entity - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/entities/:collection/:entity - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RewardsResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"RewardResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44bc1c44008b4590\"},\"name\":{\"title\":\"Name\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward name\"}}},\"description\":{\"title\":\"Description\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward description\"}}},\"redeem_instructions\":{\"title\":\"RedeemInstructions\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Redeem instructions\"}}},\"terms\":{\"title\":\"Terms\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Terms & Conditions\"}}},\"type\":{\"type\":\"string\",\"example\":\"coupon\"},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-07-21T12:00:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-12-21T12:00:00.000Z\"},\"message\":{\"type\":\"string\",\"example\":\"Message\"},\"claim_button_label\":{\"title\":\"ClaimButtonLabel\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Claim\"}}},\"category\":{\"title\":\"Category\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"segments\":{\"type\":\"array\",\"items\":{\"title\":\"Segment\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"description\":\"\"},\"cost\":{\"type\":\"string\",\"example\":\"150.5\"},\"hide_restricted\":{\"type\":\"boolean\",\"example\":false},\"hidden\":{\"type\":\"boolean\",\"example\":false},\"restricted_message\":{\"title\":\"RestrictedMessage\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Message\"}}},\"repeat_interval\":{\"type\":\"string\",\"example\":\"1 week\"},\"stock\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":42},\"max_claims\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":90},\"notifications\":{\"type\":\"boolean\",\"example\":false},\"user_notifications\":{\"type\":\"boolean\",\"example\":false},\"status\":{\"type\":\"string\",\"example\":\"inactive\"},\"price\":{\"title\":\"Price\",\"type\":\"object\",\"properties\":{\"EUR\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":500}}}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/entities/:collection/:entity - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "40fbb43b-b34c-4891-9fc3-0272b7c3ca7c",
          "name": "Create a new entity using an API call",
          "request": {
            "name": "Create a new entity using an API call",
            "description": {
              "content": "An entity can be created in a collection using the following API call. Any parameter can be set as long as there is the corresponding attribute pre-configured in the Antavo Backoffice.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                ":collection",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The entities' collection name e.g., rewards, customers",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "collection"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "entity"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"test entity\",\n  \"description\": \"This is the description field\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "178627e3-2b34-440e-9d39-1e017fe10c3a",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"test entity\",\n  \"description\": \"This is the description field\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"5f05b989a44bc1c44008b4590\",\n  \"name\": {\n    \"en\": \"Reward name\"\n  },\n  \"description\": {\n    \"en\": \"Reward description\"\n  },\n  \"redeem_instructions\": {\n    \"en\": \"Redeem instructions\"\n  },\n  \"terms\": {\n    \"en\": \"Terms & Conditions\"\n  },\n  \"type\": \"coupon\",\n  \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n  \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n  \"message\": \"Message\",\n  \"claim_button_label\": {\n    \"en\": \"Claim\"\n  },\n  \"category\": {\n    \"id\": \"5ef1ad79a44b5e15008b456e\"\n  },\n  \"segments\": [\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    },\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    }\n  ],\n  \"cost\": \"150.5\",\n  \"hide_restricted\": false,\n  \"hidden\": false,\n  \"restricted_message\": {\n    \"en\": \"Message\"\n  },\n  \"repeat_interval\": \"1 week\",\n  \"stock\": 42,\n  \"max_claims\": 90,\n  \"notifications\": false,\n  \"user_notifications\": false,\n  \"status\": \"inactive\",\n  \"price\": {\n    \"EUR\": 500\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cf289c08-ede5-4b9a-9dca-244777b2fd45",
              "name": "Reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"test entity\",\n  \"description\": \"This is the description field\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "867462ea-b83a-4a74-a361-4cff5def4aee",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/entities/:collection/:entity - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/entities/:collection/:entity - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/entities/:collection/:entity - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RewardResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44bc1c44008b4590\"},\"name\":{\"title\":\"Name\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward name\"}}},\"description\":{\"title\":\"Description\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward description\"}}},\"redeem_instructions\":{\"title\":\"RedeemInstructions\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Redeem instructions\"}}},\"terms\":{\"title\":\"Terms\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Terms & Conditions\"}}},\"type\":{\"type\":\"string\",\"example\":\"coupon\"},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-07-21T12:00:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-12-21T12:00:00.000Z\"},\"message\":{\"type\":\"string\",\"example\":\"Message\"},\"claim_button_label\":{\"title\":\"ClaimButtonLabel\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Claim\"}}},\"category\":{\"title\":\"Category\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"segments\":{\"type\":\"array\",\"items\":{\"title\":\"Segment\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"description\":\"\"},\"cost\":{\"type\":\"string\",\"example\":\"150.5\"},\"hide_restricted\":{\"type\":\"boolean\",\"example\":false},\"hidden\":{\"type\":\"boolean\",\"example\":false},\"restricted_message\":{\"title\":\"RestrictedMessage\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Message\"}}},\"repeat_interval\":{\"type\":\"string\",\"example\":\"1 week\"},\"stock\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":42},\"max_claims\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":90},\"notifications\":{\"type\":\"boolean\",\"example\":false},\"user_notifications\":{\"type\":\"boolean\",\"example\":false},\"status\":{\"type\":\"string\",\"example\":\"inactive\"},\"price\":{\"title\":\"Price\",\"type\":\"object\",\"properties\":{\"EUR\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":500}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/entities/:collection/:entity - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f7a7c734-0a44-4f4e-bcef-46d70f337be1",
          "name": "Returns all information regarding a specific entity",
          "request": {
            "name": "Returns all information regarding a specific entity",
            "description": {
              "content": "Returns all information regarding a specific entity",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                ":collection",
                ":entity",
                ":entity_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "amet3",
                  "value": "nisi quis veniam"
                },
                {
                  "disabled": false,
                  "key": "consequat2",
                  "value": "ex veniam "
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The entities' collection name e.g., rewards, customers",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "collection"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "entity"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The specific unique id for a custom entity",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "entity_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "723a1f79-acd0-49c1-9edb-58f9a6cc3405",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "amet3",
                      "value": "nisi quis veniam"
                    },
                    {
                      "key": "consequat2",
                      "value": "ex veniam "
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The specific unique id for a custom entity",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"5f05b989a44bc1c44008b4590\",\n  \"name\": {\n    \"en\": \"Reward name\"\n  },\n  \"description\": {\n    \"en\": \"Reward description\"\n  },\n  \"redeem_instructions\": {\n    \"en\": \"Redeem instructions\"\n  },\n  \"terms\": {\n    \"en\": \"Terms & Conditions\"\n  },\n  \"type\": \"coupon\",\n  \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n  \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n  \"message\": \"Message\",\n  \"claim_button_label\": {\n    \"en\": \"Claim\"\n  },\n  \"category\": {\n    \"id\": \"5ef1ad79a44b5e15008b456e\"\n  },\n  \"segments\": [\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    },\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    }\n  ],\n  \"cost\": \"150.5\",\n  \"hide_restricted\": false,\n  \"hidden\": false,\n  \"restricted_message\": {\n    \"en\": \"Message\"\n  },\n  \"repeat_interval\": \"1 week\",\n  \"stock\": 42,\n  \"max_claims\": 90,\n  \"notifications\": false,\n  \"user_notifications\": false,\n  \"status\": \"inactive\",\n  \"price\": {\n    \"EUR\": 500\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d5fa2424-8899-4d18-835d-2b20fb3ae080",
              "name": "Reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "amet3",
                      "value": "nisi quis veniam"
                    },
                    {
                      "key": "consequat2",
                      "value": "ex veniam "
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The specific unique id for a custom entity",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f2f3cbcc-55d5-4fef-810d-0eaae608fd5d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/entities/:collection/:entity/:entity_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/entities/:collection/:entity/:entity_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/entities/:collection/:entity/:entity_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RewardResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44bc1c44008b4590\"},\"name\":{\"title\":\"Name\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward name\"}}},\"description\":{\"title\":\"Description\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward description\"}}},\"redeem_instructions\":{\"title\":\"RedeemInstructions\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Redeem instructions\"}}},\"terms\":{\"title\":\"Terms\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Terms & Conditions\"}}},\"type\":{\"type\":\"string\",\"example\":\"coupon\"},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-07-21T12:00:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-12-21T12:00:00.000Z\"},\"message\":{\"type\":\"string\",\"example\":\"Message\"},\"claim_button_label\":{\"title\":\"ClaimButtonLabel\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Claim\"}}},\"category\":{\"title\":\"Category\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"segments\":{\"type\":\"array\",\"items\":{\"title\":\"Segment\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"description\":\"\"},\"cost\":{\"type\":\"string\",\"example\":\"150.5\"},\"hide_restricted\":{\"type\":\"boolean\",\"example\":false},\"hidden\":{\"type\":\"boolean\",\"example\":false},\"restricted_message\":{\"title\":\"RestrictedMessage\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Message\"}}},\"repeat_interval\":{\"type\":\"string\",\"example\":\"1 week\"},\"stock\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":42},\"max_claims\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":90},\"notifications\":{\"type\":\"boolean\",\"example\":false},\"user_notifications\":{\"type\":\"boolean\",\"example\":false},\"status\":{\"type\":\"string\",\"example\":\"inactive\"},\"price\":{\"title\":\"Price\",\"type\":\"object\",\"properties\":{\"EUR\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":500}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/entities/:collection/:entity/:entity_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "588169f9-1d2d-48a4-9e07-ae1d0c166e2c",
          "name": "Updates a specific entity within a collection",
          "request": {
            "name": "Updates a specific entity within a collection",
            "description": {
              "content": "Any pre-configured attribute in an entity collection can be modified using this API. Modification requires the use of  attribute's uniqueid, set in the Backoffice.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                ":collection",
                ":entity",
                ":entity_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The entities' collection name e.g., rewards, customers",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "collection"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "entity"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The specific unique id for a custom entity",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "entity_id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"test entity\",\n  \"description\": \"This is the description field\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "97ba5180-c668-4ee8-bdac-26953bd6c6d9",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The specific unique id for a custom entity",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"test entity\",\n  \"description\": \"This is the description field\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"5f05b989a44bc1c44008b4590\",\n  \"name\": {\n    \"en\": \"Reward name\"\n  },\n  \"description\": {\n    \"en\": \"Reward description\"\n  },\n  \"redeem_instructions\": {\n    \"en\": \"Redeem instructions\"\n  },\n  \"terms\": {\n    \"en\": \"Terms & Conditions\"\n  },\n  \"type\": \"coupon\",\n  \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n  \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n  \"message\": \"Message\",\n  \"claim_button_label\": {\n    \"en\": \"Claim\"\n  },\n  \"category\": {\n    \"id\": \"5ef1ad79a44b5e15008b456e\"\n  },\n  \"segments\": [\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    },\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    }\n  ],\n  \"cost\": \"150.5\",\n  \"hide_restricted\": false,\n  \"hidden\": false,\n  \"restricted_message\": {\n    \"en\": \"Message\"\n  },\n  \"repeat_interval\": \"1 week\",\n  \"stock\": 42,\n  \"max_claims\": 90,\n  \"notifications\": false,\n  \"user_notifications\": false,\n  \"status\": \"inactive\",\n  \"price\": {\n    \"EUR\": 500\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e7842912-9695-437d-9613-218feee7a790",
              "name": "Entity not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The specific unique id for a custom entity",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"test entity\",\n  \"description\": \"This is the description field\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": \"5f05b989a44bc1c44008b4590\",\n  \"name\": {\n    \"en\": \"Reward name\"\n  },\n  \"description\": {\n    \"en\": \"Reward description\"\n  },\n  \"redeem_instructions\": {\n    \"en\": \"Redeem instructions\"\n  },\n  \"terms\": {\n    \"en\": \"Terms & Conditions\"\n  },\n  \"type\": \"coupon\",\n  \"starts_at\": \"2020-07-21T12:00:00.000Z\",\n  \"ends_at\": \"2020-12-21T12:00:00.000Z\",\n  \"message\": \"Message\",\n  \"claim_button_label\": {\n    \"en\": \"Claim\"\n  },\n  \"category\": {\n    \"id\": \"5ef1ad79a44b5e15008b456e\"\n  },\n  \"segments\": [\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    },\n    {\n      \"id\": \"5ef1ad79a44b5e15008b456e\"\n    }\n  ],\n  \"cost\": \"150.5\",\n  \"hide_restricted\": false,\n  \"hidden\": false,\n  \"restricted_message\": {\n    \"en\": \"Message\"\n  },\n  \"repeat_interval\": \"1 week\",\n  \"stock\": 42,\n  \"max_claims\": 90,\n  \"notifications\": false,\n  \"user_notifications\": false,\n  \"status\": \"inactive\",\n  \"price\": {\n    \"EUR\": 500\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c643db91-73d5-4579-a7b9-a4f470595392",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/entities/:collection/:entity/:entity_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/entities/:collection/:entity/:entity_id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/entities/:collection/:entity/:entity_id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"RewardResponse\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5f05b989a44bc1c44008b4590\"},\"name\":{\"title\":\"Name\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward name\"}}},\"description\":{\"title\":\"Description\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Reward description\"}}},\"redeem_instructions\":{\"title\":\"RedeemInstructions\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Redeem instructions\"}}},\"terms\":{\"title\":\"Terms\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Terms & Conditions\"}}},\"type\":{\"type\":\"string\",\"example\":\"coupon\"},\"starts_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-07-21T12:00:00.000Z\"},\"ends_at\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-12-21T12:00:00.000Z\"},\"message\":{\"type\":\"string\",\"example\":\"Message\"},\"claim_button_label\":{\"title\":\"ClaimButtonLabel\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Claim\"}}},\"category\":{\"title\":\"Category\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"segments\":{\"type\":\"array\",\"items\":{\"title\":\"Segment\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"example\":\"5ef1ad79a44b5e15008b456e\"}}},\"description\":\"\"},\"cost\":{\"type\":\"string\",\"example\":\"150.5\"},\"hide_restricted\":{\"type\":\"boolean\",\"example\":false},\"hidden\":{\"type\":\"boolean\",\"example\":false},\"restricted_message\":{\"title\":\"RestrictedMessage\",\"type\":\"object\",\"properties\":{\"en\":{\"type\":\"string\",\"example\":\"Message\"}}},\"repeat_interval\":{\"type\":\"string\",\"example\":\"1 week\"},\"stock\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":42},\"max_claims\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":90},\"notifications\":{\"type\":\"boolean\",\"example\":false},\"user_notifications\":{\"type\":\"boolean\",\"example\":false},\"status\":{\"type\":\"string\",\"example\":\"inactive\"},\"price\":{\"title\":\"Price\",\"type\":\"object\",\"properties\":{\"EUR\":{\"type\":\"integer\",\"format\":\"int32\",\"example\":500}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/entities/:collection/:entity/:entity_id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "80f50785-66eb-416e-a9b5-379b1d0d97c0",
          "name": "Archives an inactive entity",
          "request": {
            "name": "Archives an inactive entity",
            "description": {
              "content": "Antavo archives data and objects by policy. This endpoint archives an entity, making it completely invisible and unaccessible for customers and Antavo back office users, effectively removing it  from the system. The entity can be restored but only by raising a support ticket with Antavo",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities",
                ":collection",
                ":entity",
                ":entity_id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The entities' collection name e.g., rewards, customers",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "collection"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "entity"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) The specific unique id for a custom entity",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "",
                  "key": "entity_id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "981beaf5-0d36-4986-a012-2039e5034bda",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The specific unique id for a custom entity",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3f3dcc50-f4c7-46dd-87c9-9b5fb4976e0c",
              "name": "Reward not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities",
                    ":collection",
                    ":entity",
                    ":entity_id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The entities' collection name e.g., rewards, customers",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "collection"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The custom entity's label -- typically the singular form of the collection",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) The specific unique id for a custom entity",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "",
                      "key": "entity_id"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"error\": {\n    \"type\": \"BadRequestException\",\n    \"code\": 113401,\n    \"message\": \"Missing required parameter 'parameter_name'\"\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c53037b-e57a-4709-bea2-f2d12ca82e96",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/entities/:collection/:entity/:entity_id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "04924d23-0a32-43df-a773-1cf2ca8a5abe",
          "name": "A custom entities bulk submission endpoint",
          "request": {
            "name": "A custom entities bulk submission endpoint",
            "description": {
              "content": "Multiple calls to any number of custom entities endpoints can be made by submitting a request with data in array format\n\nThe following options are available for error checking the submitted data:\n* skip - Any erroneous data is not added and the whole entry is skipped.\n* pre-check - The submitted data is checked for validity but not entered into the Antavo system. Any error messages are returned.\n* fail - The submission is stopped upon an error being returned.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "entities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"entities\": [\n    {\n      \"method\": \"PUT\",\n      \"type\": \"custom/test_entity\",\n      \"id\": \"id_01\"\n    },\n    {\n      \"method\": \"PUT\",\n      \"type\": \"custom/test_entity\",\n      \"id\": \"id_01\"\n    }\n  ],\n  \"error_handling\": \"l\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b51dd95e-8bdf-43f4-a369-bba22f4df0dc",
              "name": "Successful pre-check response",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"entities\": [\n    {\n      \"method\": \"PUT\",\n      \"type\": \"custom/test_entity\",\n      \"id\": \"id_01\"\n    },\n    {\n      \"method\": \"PUT\",\n      \"type\": \"custom/test_entity\",\n      \"id\": \"id_01\"\n    }\n  ],\n  \"error_handling\": \"commodo magna elit\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f30b25e0-b5c5-4711-b6eb-708c38de7d8c",
              "name": "Erroneous pre-check response",
              "originalRequest": {
                "url": {
                  "path": [
                    "entities"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"entities\": [\n    {\n      \"method\": \"PUT\",\n      \"type\": \"custom/test_entity\",\n      \"id\": \"id_01\"\n    },\n    {\n      \"method\": \"PUT\",\n      \"type\": \"custom/test_entity\",\n      \"id\": \"id_01\"\n    }\n  ],\n  \"error_handling\": \"commodo magna elit\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e394da49-a354-4f4b-bc4f-a395edf42b59",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/entities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/entities - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"results\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"description\":\"An API response for an error-free defined bulk custom entity call\",\"properties\":{\"method\":{\"type\":\"string\",\"description\":\"API call type\",\"example\":\"PUT\"},\"type\":{\"type\":\"string\",\"description\":\"Custom entity type\",\"example\":\"custom/test_entity\"},\"id\":{\"type\":\"string\",\"description\":\"Custom entity id\",\"example\":\"id_01\"}}}},\"total\":{\"type\":\"number\",\"description\":\"Number of processed entity calls\",\"example\":2},\"errors\":{\"type\":\"number\",\"description\":\"Number of errors\",\"example\":0}},\"example\":{\"results\":[{\"method\":\"PUT\",\"type\":\"custom/test_entity\",\"id\":\"id_01\"},{\"method\":\"GET\",\"type\":\"custom/test_entity\",\"id\":\"id_01\",\"entity\\\"\":{\"id\":\"id_01\",\"name\":\"Test Entity\"}}],\"total\":2,\"errors\":0}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/entities - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "5aabf44c-9921-4ec3-a995-12040abe7087",
      "name": "undefined",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "1ebc1b87-eb1f-4b2e-9eae-e4c928e62fc8",
      "name": "Automation campaigns",
      "description": {
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "763f0bad-92f2-4098-9fbf-a1f4dfd1d96d",
      "name": "FAQ",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e1cdd3b7-a0bf-4708-a767-9cd0fbd3f799",
          "name": "Returns FAQs and corresponding answers",
          "request": {
            "name": "Returns FAQs and corresponding answers",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "faq"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a03a2464-5f00-4782-b2b3-39c2b7dc8770",
              "name": "FAQ data",
              "originalRequest": {
                "url": {
                  "path": [
                    "faq"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"data\": {\n    \"title\": \"sample Question\",\n    \"description\": \"Sample Response\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1cf9e7cf-b5be-44f1-9ef0-478c1a26614e",
              "name": "FAQ module not activated",
              "originalRequest": {
                "url": {
                  "path": [
                    "faq"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"type\": \"NotFoundException\",\n  \"code\": 0,\n  \"message\": \"Not Found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "30350487-d036-4633-9386-e9a8cdc6e483",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/faq - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/faq - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/faq - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"title\":\"FAQResponse\",\"type\":\"object\",\"properties\":{\"data\":{\"type\":\"array\",\"items\":{\"title\":\"FAQ\",\"required\":[\"title\",\"description\"],\"type\":\"object\",\"properties\":{\"title\":{\"type\":\"string\",\"description\":\"FAQ Question\",\"example\":\"Is this a typical FAQ?\"},\"description\":{\"type\":\"string\",\"description\":\"FAQ Response\",\"example\":\"YEs, and this is a typical FAQ Response\"}}},\"description\":\"\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/faq - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "cf41d8ef-3a5d-49fd-a9f5-9c512a8a6ae3",
      "name": "Leaderboard",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e3e9e950-e5e7-4ed9-addf-93d9caaf6472",
          "name": "Returns best performing customers",
          "request": {
            "name": "Returns best performing customers",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "customers",
                "leaderboard"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "The number of results to return. Values outside the acceptance range will be automatically changed to the nearest boundary value.",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "20"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "The interval in which the leaderboard standings should be returned. Accepted values: overall, week, month",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "overall"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7e4974b3-c8d3-43db-8281-9380ded41575",
              "name": "Customer leaderboard data",
              "originalRequest": {
                "url": {
                  "path": [
                    "customers",
                    "leaderboard"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20"
                    },
                    {
                      "key": "offset",
                      "value": "overall"
                    },
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6aeb30cb-36e6-4541-9cdc-a4490b365f77",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/customers/leaderboard - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/customers/leaderboard - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"oneOf\":[{\"type\":\"array\",\"description\":\"An array of Leaderboard items\",\"items\":{\"type\":\"object\",\"required\":[\"id\",\"handler\",\"image_url\",\"score\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The unique customer loyalty identifier\",\"example\":\"123456789\"},\"handler\":{\"type\":\"string\",\"description\":\"The customer's handler (nickname). If not set, this will return the customer's first name or null.\",\"example\":\"Nickname\"},\"image_url\":{\"type\":\"string\",\"description\":\"The avatar of the customer. Returns null If not set\",\"example\":\"https://example.com/image.png\"},\"score\":{\"type\":\"integer\",\"description\":\"The points earned by the customer in the given interval\",\"example\":12345}}}},{\"description\":\"Detailed breakdown of an Antavo-related error\",\"type\":\"object\",\"required\":[\"type\",\"code\",\"message\"],\"properties\":{\"type\":{\"type\":\"string\",\"description\":\"Type of the error occurred, e.g.: `BadRequestException`, `NotFoundException`\",\"example\":\"RuntimeException\"},\"code\":{\"type\":\"number\",\"description\":\"A 6-digit number to uniquely identify the place the error occurred\",\"example\":160201},\"message\":{\"type\":\"string\",\"description\":\"Human readable error message\",\"example\":\"Leaderboard extension is not enabled\"}}}]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/customers/leaderboard - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "2e2f938c-b996-4db6-9bfe-dad8220ce746",
      "name": "Level",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c9859899-2807-4a55-8c74-afa30a492a4f",
          "name": "Returns levels breakdown and thresholds",
          "request": {
            "name": "Returns levels breakdown and thresholds",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "levels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "57d04c63-991c-4061-8036-46c9efda5241",
              "name": "Current Level breakdown data",
              "originalRequest": {
                "url": {
                  "path": [
                    "levels"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0ae6b571-0dec-44e8-9215-335bb8cb60c3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/levels - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/levels - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"oneOf\":[{\"type\":\"array\",\"description\":\"An array of available Level items\",\"items\":{\"anyOf\":[{\"type\":\"object\",\"required\":[\"id\",\"name\",\"image_url\",\"limit\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The unique level identifier\",\"example\":\"5b7bd8af045f49bb178b45a1\"},\"name\":{\"type\":\"string\",\"description\":\"The customer-facing name for the level\",\"example\":\"Diamond\"},\"image_url\":{\"type\":\"string\",\"description\":\"A corresponding image for the level\",\"example\":\"https://example.com/image.png\"},\"limit\":{\"type\":\"integer\",\"description\":\"The lower threshold required for joining this level\",\"example\":1000}}},{\"type\":\"object\",\"required\":[\"id\",\"name\",\"image_url\",\"limit\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The unique level identifier\",\"example\":\"5b7bd8af045f49bb178b45a1\"},\"name\":{\"type\":\"string\",\"description\":\"The customer-facing name for the level\",\"example\":\"Diamond\"},\"image_url\":{\"type\":\"string\",\"description\":\"A corresponding image for the level\",\"example\":\"https://example.com/image.png\"},\"limit\":{\"type\":\"integer\",\"description\":\"The lower threshold required for joining this level\",\"example\":1000}}},{\"type\":\"object\",\"required\":[\"id\",\"name\",\"image_url\",\"limit\"],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The unique level identifier\",\"example\":\"5b7bd8af045f49bb178b45a1\"},\"name\":{\"type\":\"string\",\"description\":\"The customer-facing name for the level\",\"example\":\"Diamond\"},\"image_url\":{\"type\":\"string\",\"description\":\"A corresponding image for the level\",\"example\":\"https://example.com/image.png\"},\"limit\":{\"type\":\"integer\",\"description\":\"The lower threshold required for joining this level\",\"example\":1000}}}],\"example\":[null]}},{\"description\":\"Detailed breakdown of an Antavo-related error\",\"type\":\"object\",\"required\":[\"type\",\"code\",\"message\"],\"properties\":{\"type\":{\"type\":\"string\",\"description\":\"Type of the error occurred, e.g.: `BadRequestException`, `NotFoundException`\",\"example\":\"RuntimeException\"},\"code\":{\"type\":\"number\",\"description\":\"A 6-digit number to uniquely identify the place the error occurred\",\"example\":160201},\"message\":{\"type\":\"string\",\"description\":\"Human readable error message\",\"example\":\"This extension is not enabled\"}}}]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/levels - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "a39c619a-448c-40e4-9e1b-ef3899906ea8",
      "name": "QR Code",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4891c425-e35a-4334-8bd7-07050efd3330",
          "name": "A QR code generation endpoint",
          "request": {
            "name": "A QR code generation endpoint",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "qrcodes",
                ":string_to_encode",
                "s{{size}}p{{padding}}",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) URL encoded string to convert to a QR code",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "aliquip in adipisicin",
                  "key": "string_to_encode"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "image/*"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f379da19-ac57-4c3b-bba0-5e776e8d604f",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "qrcodes",
                    ":string_to_encode",
                    "s{{size}}p{{padding}}",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) URL encoded string to convert to a QR code",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "aliquip in adipisicin",
                      "key": "string_to_encode"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "image/*"
                }
              ],
              "body": "aliquip in adipisicin",
              "cookie": []
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "002c21e1-71d0-40c3-a6e8-814640c93f57",
      "name": "Events",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "32dc9e1a-8a85-4687-b20e-ff0e5a3ce755",
          "name": "Returns the calculated points for submitted products",
          "request": {
            "name": "Returns the calculated points for submitted products",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "extensions",
                "automation",
                "campaign-bonus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customer\": \"unique_customer_id\",\n  \"action\": \"checkout\",\n  \"data\": {\n    \"transaction_id\": \"AAA-BBB-CCC-DDD\",\n    \"total\": 23,\n    \"items\": [\n      {\n        \"product_name\": \"A product name\",\n        \"product_url\": \"http://example.com/product_url.html\",\n        \"price\": 12.23,\n        \"product_id\": \"XX-YY-ZZ\",\n        \"discount\": 1.23,\n        \"quantity\": 3,\n        \"subtotal\": 33\n      },\n      {\n        \"product_name\": \"A product name\",\n        \"product_url\": \"http://example.com/product_url.html\",\n        \"price\": 12.23,\n        \"product_id\": \"XX-YY-ZZ\",\n        \"discount\": 1.23,\n        \"quantity\": 3,\n        \"subtotal\": 33\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "8eb72b84-e937-47e8-966c-40f7e7173826",
              "name": "Product points probe submission",
              "originalRequest": {
                "url": {
                  "path": [
                    "extensions",
                    "automation",
                    "campaign-bonus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customer\": \"unique_customer_id\",\n  \"action\": \"checkout\",\n  \"data\": {\n    \"transaction_id\": \"AAA-BBB-CCC-DDD\",\n    \"total\": 23,\n    \"items\": [\n      {\n        \"product_name\": \"A product name\",\n        \"product_url\": \"http://example.com/product_url.html\",\n        \"price\": 12.23,\n        \"product_id\": \"XX-YY-ZZ\",\n        \"discount\": 1.23,\n        \"quantity\": 3,\n        \"subtotal\": 33\n      },\n      {\n        \"product_name\": \"A product name\",\n        \"product_url\": \"http://example.com/product_url.html\",\n        \"price\": 12.23,\n        \"product_id\": \"XX-YY-ZZ\",\n        \"discount\": 1.23,\n        \"quantity\": 3,\n        \"subtotal\": 33\n      }\n    ]\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aa826f1c-d549-48a7-a475-a26832b458a1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/extensions/automation/campaign-bonus - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/extensions/automation/campaign-bonus - Content-Type is */*\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"*/*\");\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"automation\":{\"type\":\"string\",\"description\":\"The unique MongoID of the automation campaign that gives the bonus points\",\"example\":\"5b9bd24f90a963a4088b456c\"},\"points\":{\"type\":\"integer\",\"description\":\"Available points for submitted transaction. These are **not** assigned to the customer and for display purposes only.\",\"example\":\"checkout\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/extensions/automation/campaign-bonus - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a0bc9e4b-8b6f-442c-81ba-2525064b4a80",
          "name": "Submit an Antavo Event",
          "request": {
            "name": "Submit an Antavo Event",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customer\": \"001\",\n  \"action\": \"point_add\",\n  \"account\": \"test1\",\n  \"data\": {\n    \"points\": 123\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1c69c7ce-47fa-45db-bbde-800a27ae08ad",
              "name": "Successful event submission for visit action - The response example/schema is only valid for the visit action",
              "originalRequest": {
                "url": {
                  "path": [
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customer\": \"001\",\n  \"action\": \"point_add\",\n  \"account\": \"test1\",\n  \"data\": {\n    \"points\": 123\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"id\": {},\n  \"created_at\": {},\n  \"handler\": {},\n  \"status\": {},\n  \"score\": {},\n  \"spent\": {},\n  \"level\": {},\n  \"pending\": {},\n  \"language\": {},\n  \"currency\": {},\n  \"events\": [\n    {\n      \"id\": {},\n      \"action\": {},\n      \"points\": {}\n    },\n    {\n      \"id\": {},\n      \"action\": {},\n      \"points\": {}\n    }\n  ]\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d8ec5370-a187-4647-8efa-a0c6e625cc19",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/events - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/events - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/events - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"description\":\"Submitting an Event\",\"properties\":{\"id\":{\"example\":\"001\"},\"created_at\":{\"example\":1603201860},\"handler\":{\"example\":\"\"},\"status\":{\"example\":\"active\"},\"score\":{\"example\":1970},\"spent\":{\"example\":0},\"level\":{\"example\":\"5fd9c9a67bb899120000002a\"},\"pending\":{\"example\":0},\"language\":{\"example\":null},\"currency\":{\"example\":null},\"events\":{\"type\":\"array\",\"description\":\"Required data for action\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"example\":\"602fafef53164d14000000ec\"},\"action\":{\"example\":\"point_add\"},\"points\":{\"example\":1234}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/events - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bbc1144c-1958-41f0-af3c-d6b3faffa68f",
          "name": "Submit numerous Antavo Events within one request",
          "request": {
            "name": "Submit numerous Antavo Events within one request",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "events",
                "bulk"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"events\": [\n    {\n      \"customer\": \"001\",\n      \"action\": \"point_add\",\n      \"account\": \"test1\",\n      \"data\": {\n        \"points\": 145\n      }\n    },\n    {\n      \"customer\": \"001\",\n      \"action\": \"point_sub\",\n      \"account\": \"test2\",\n      \"data\": {\n        \"points\": 35\n      }\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4c959833-9382-4391-9878-0ec68caa3340",
              "name": "Two successful point manipulation events submitted in one API request.  The response example/Schema is only valid for the points_add/points_sub events.",
              "originalRequest": {
                "url": {
                  "path": [
                    "events",
                    "bulk"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "<API Key>"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"events\": [\n    {\n      \"customer\": \"001\",\n      \"action\": \"point_add\",\n      \"account\": \"test1\",\n      \"data\": {\n        \"points\": 145\n      }\n    },\n    {\n      \"customer\": \"001\",\n      \"action\": \"point_sub\",\n      \"account\": \"test2\",\n      \"data\": {\n        \"points\": 35\n      }\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"results\": [\n    {\n      \"events\": {\n        \"custom\": {},\n        \"action\": {},\n        \"points\": {}\n      }\n    },\n    {\n      \"events\": {\n        \"custom\": {},\n        \"action\": {},\n        \"points\": {}\n      }\n    }\n  ],\n  \"total\": 2,\n  \"errors\": 0\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0bbb7310-4451-48cf-9bf5-b28975bf3ed6",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/events/bulk - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/events/bulk - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/events/bulk - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"results\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"events\":{\"type\":\"object\",\"description\":\"Submitting an Event\",\"properties\":{\"custom\":{\"example\":\"001\"},\"action\":{\"example\":\"point_add\"},\"points\":{\"example\":123}}}}}},\"total\":{\"type\":\"integer\",\"example\":2},\"errors\":{\"type\":\"integer\",\"example\":0}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/events/bulk - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "api_key",
        "key": "key"
      },
      {
        "type": "any",
        "value": "<API Key>",
        "key": "value"
      },
      {
        "type": "any",
        "value": "query",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://api.rc.antavo.com",
      "key": "baseUrl"
    },
    {
      "disabled": false,
      "description": {
        "content": "size of QR code, in pixels",
        "type": "text/plain"
      },
      "type": "any",
      "value": "300",
      "key": "size"
    },
    {
      "disabled": false,
      "description": {
        "content": "Padding around QR code, in pixels",
        "type": "text/plain"
      },
      "type": "any",
      "value": "0",
      "key": "padding"
    }
  ],
  "info": {
    "_postman_id": "efffd420-a8de-4599-b39d-dd947eabff7f",
    "name": "Display API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "The Display API\n\nContact Support:\n Email: support@antavo.com",
      "type": "text/plain"
    }
  }
}